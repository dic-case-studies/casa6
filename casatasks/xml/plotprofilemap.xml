<casaxml xsi:schemaLocation="http://casa.nrao.edu/schema/casa.xsd file:///opt/casa/code/xmlcasa/xml/casa.xsd" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://casa.nrao.edu/schema/psetTypes.html">

<task category="visualization" name="plotprofilemap" type="function">

  <shortdescription>Makes profile map.</shortdescription>
      
  <description>
  The plotprofilemap makes spectral profile map from specified image. 
  The task accepts both CASA image and FITS cube as an input.
  </description>

  <input>
    <param mustexist="true" name="imagename" type="string"><shortdescription>Input image name (CASA image or FITS)</shortdescription><description>Input image name (CASA image or FITS)</description>
      
      <value/>
    </param>

    <param name="figfile" type="string"><shortdescription>Output figure name</shortdescription><description>Output figure name</description>
      
      <value/>
    </param>

    <param subparam="true" name="overwrite" type="bool"><shortdescription>Overwrite existing figfile</shortdescription><description>Overwrite existing figfile</description>
      
      <value>False</value>
    </param>
    
    <param subparam="true" name="transparent" type="bool"><shortdescription>Output transparent figure</shortdescription><description>Output transparent figure</description>
      
      <value>False</value>
    </param>
    
    <param name="pol" type="int"><shortdescription>Polarization component to be plotted</shortdescription><description>Polarization component to be plotted</description>
      
      <value>0</value>
    </param>
    
    <param name="spectralaxis" type="string"><shortdescription>Type of spectral axis</shortdescription><description>Type of spectral axis</description>
      
      <value/>
      <allowed kind="enum">
        <value/>
        <value>frequency</value>
        <value>channel</value>
        <value>velocity</value>
      </allowed>
    </param>
    
    <param subparam="true" name="restfreq" type="string"><shortdescription>Rest frequency</shortdescription><description>Rest frequency</description>
      
      <value/>
    </param>
    
    <param name="plotrange" type="string"><shortdescription>Spectral axis range to plot</shortdescription><description>Spectral axis range to plot</description>
      
      <value/>
    </param>
    
    <param name="title" type="string"><shortdescription>Title of the plot</shortdescription><description>Title of the plot</description>
      
      <value/>
    </param>
    
  <param name="linecolor" type="string"><shortdescription>Line color</shortdescription><description>Line color</description>
    
    <value>b</value>
  </param>
  
  <param name="linestyle" type="string"><shortdescription>Line style</shortdescription><description>Line style</description>
    
    <value>-</value>
  </param>
  
  <param name="linewidth" type="double"><shortdescription>Line width in points</shortdescription><description>Line width in points</description>
    
    <value>0.2</value>
  </param>

    <param name="separatepanel" type="bool"><shortdescription>Separate plots</shortdescription><description>Separate plots</description>
      
      <value>True</value>
    </param>
    
    <param name="plotmasked" type="string"><shortdescription>Masked data handling</shortdescription><description>Masked data handling</description>
      
      <value>empty</value>
      <allowed kind="enum">
        <value>empty</value>
        <value>text</value>
        <value>zero</value>
        <value>none</value>
        <value>plot</value>
      </allowed>
    </param>
    
    <param subparam="true" name="maskedcolor" type="string"><shortdescription>Line color for masked data</shortdescription><description>Line color for masked data</description>
      
      <value>gray</value>
    </param>
    
    <param name="showaxislabel" type="bool"><shortdescription>Show axis labels on the bottom left panel</shortdescription><description>Show axis labels on the bottom left panel</description>
      
      <value>False</value>
    </param>
    
    <param name="showtick" type="bool"><shortdescription>Show axis ticks</shortdescription><description>Show axis ticks</description>
      
      <value>False</value>
    </param>
    
    <param subparam="true" name="showticklabel" type="bool"><shortdescription>Show axis tick labels on the bottom left panel</shortdescription><description>Show axis tick labels on the bottom left panel</description>
      
      <value>False</value>
    </param>

    <param name="figsize" type="string"><shortdescription>Size of the figure</shortdescription><description>Size of the figure</description>
      
      <value/>
    </param>
    
    <param name="numpanels" type="string"><shortdescription>Number of panels</shortdescription><description>Number of panels</description>
      
      <value/>
    </param>
    
    <constraints>
      <when param="figfile">
        <notequals value="" type="string">
          <default param="overwrite"><value type="bool">False</value></default>
          <default param="transparent"><value type="bool">False</value></default>
        </notequals>
      </when>
      <when param="spectralaxis">
        <equals value="" type="string"/>
        <equals value="velocity" type="string">
          <default param="restfreq"><value type="string"/></default>
        </equals>
      </when>
      <when param="plotmasked">
        <equals value="empty" type="string"/>
        <equals value="plot" type="string">
          <default param="maskedcolor"><value type="string">gray</value></default>
        </equals>
        <equals value="zero" type="string">
          <default param="maskedcolor"><value type="string">gray</value></default>
        </equals>
      </when>
      <when param="showtick">
        <equals value="False" type="bool"/>
        <equals value="True" type="bool">
          <default param="showticklabel"><value type="bool">False</value></default>
        </equals>
      </when>
    </constraints>
  </input>

  <returns limittypes="void record" type="variant">
  </returns>

  <example>

The plotprofilemap makes spectral profile map from specified image. 
The task accepts both CASA image and FITS cube as an input.
    
It is necessary to specify existing CASA image or FITS cube as an 
imagename. Otherwise, the task will fail. If figfile is specified, 
profile map is saved as an PNG image. Please set overwrite to False 
if you don't want to overwrite existing file. 

    Keyword arguments:
    imagename -- input image name (CASA image or FITS cube)
    figfile -- output PNG image name. No output if figfile is empty
               default: '' (no output)
    overwrite -- overwrite existing output file
                 default: False
    transparent -- output transparent figure
                   default: False
    pol -- polarization component to be plotted. It is an index for stokes axis 
           of the image.
           default: 0
    spectralaxis -- spectral axis type
                    default: '' (use image's spectral axis)
                    options: 'channel', 'freuquency', 'velocity'
    restfreq -- rest frequency 
                default: '' (use image's rest frequency)
                example: '100GHz'
    plotrange -- spectral axis range to plot. unit for the range depends on 
                 what spectral axis is chosen: channel for 'channel', GHz for 
                 'frequency', and km/s for 'velocity'
                 default: '' (whole range)
                 example: '0~1000' (from 0.0 to 1000.0)
                          '~1000' (from minimul value to 1000.0)
                          '24~' (from 24.0 to maximum value)
    title -- title of the plot
             default: '' (no title)
    linecolor -- line color in matplotlib format
                 default: 'b' (blue)
                 example: 'r' (red), 'black', '#ff99ff'
    linestyle -- line style in matplotlib format
                 default: '-' (solid line)
                 example: '..' (dotted line), '.-' (solid line with point marker) 
    linewidth -- line width in points
                 default: 0.2
    separatepanel -- separate panels
                     default: True
    plotmasked -- masked data handling
                  default: 'empty' (show empty panel)
                  option: 'zero' (plot zero level)
                          'none' (show nothing)
                          'text' (show text indicating 'NO DATA')
                          'plot' (plot masked data with different 
                                  color specified by maskedcolor)
    maskedcolor -- line color for masked data
    showaxislabel -- Show axis labels on the bottom left panel
                     default: False
    showtick -- Show ticks
                default: False
    showticklabel -- Show tick labels on the bottom left panel
                     default: False
    figsize -- size of the figure
               default: '' (matplotlib default)
               example: '10cm' (10cm square)
                        '122mm,10cm' (122mm width and 10cm height)
    numpanels -- Number of panels
                 default: '' (auto)
                 example: '6,8' (nx=6, ny=8)
                          '8' (nx=8, ny=8)
                          
Number of panels along horizontal and vertical direction can be specified 
via the parameter 'numpanels'. It should be a string containing numerical 
value indicating number of panels. If only one number is given it will be 
applied to both axes. If you want to provide different numbers to horizontal 
and vertical axes, you should give two numbers as a string separated by comma. 
See example of the above parameter description section. 

If the number of panels is less than the number of pixels of input image, 
more than one pixels are assigned to one panel. In that case, spectra to be 
shown are the average of the assigned spectra in each pixel.
  
Default value for numpanels is empty string ('') which corresponds to an auto 
calculation of the number of panels based on the number of pixels of input 
image. Formula for the number of horizontal and vertical panels, nh and nv, 
are as follows:

    npanel = min(max(nx, ny), 8)
    step = (max(nx, ny) - 1) / npanel + 1
    nh = nx / step + 1
    nv = ny / step + 1
  
where nx and ny are the number of pixels along direction axes. In the above 
calculation, upper limit for nh and nv is 9.

  </example>

</task>

</casaxml>