<casaxml xsi:schemaLocation="http://casa.nrao.edu/schema/casa.xsd       file:///opt/casa/code/xmlcasa/xml/casa.xsd" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://casa.nrao.edu/schema/psetTypes.html">

<task category="calibration" name="gencal" type="function">
   <shortdescription>Specify Calibration Values of Various Types</shortdescription>
   <description>
The gencal task provides a means of specifying antenna-based
calibration values manually.  The values are put in designated tables
and applied to the data using applycal. Several specialized
calibrations are also generated with gencal.

Current antenna-based gencal options (caltype) are:
* 'amp'= amplitude correction
* 'ph' = phase correction
* 'sbd'= single-band delay (phase-frequency slope for each spw)
* 'mbd'= multi-band delay (phase-frequency slope over all spw)
* 'antpos' = ITRF antenna position corrections
* 'antposvla' = VLA-centric antenna position corrections 
* 'tsys' = Tsys from the SYSCAL table (ALMA)
* 'swpow' = EVLA switched-power gains (experimental)
* 'evlagain' (='swpow') (this syntax will deprecate)
* 'rq' = EVLA requantizer gains _only_
* 'swp/rq' = EVLA switched-power gains divided by requantizer gain
* 'opac' = Tropospheric opacity
* 'gc' = Gain curve (zenith-angle-dependent gain) (VLA only)
* 'eff' = Antenna efficiency (sqrt(K/Jy)) (VLA only)
* 'gceff' = Gain curve and efficiency (VLA only)
* 'tecim' = Time-dep TEC image specified in infile
   </description>
   <input>
      <param mustexist="true" name="vis" type="path">
<shortdescription>Name of input visibility file</shortdescription>
<description>Name of input visibility file
                     Default: none

                        Example: vis='ngc5921.ms'
</description>
         <value/>
      </param>

      <param name="caltable" type="string">
<shortdescription>Name of input calibration table</shortdescription>
<description>Name of input calibration table
                     Default: none

                     If a calibration table does not exist, it will be
                     created. Specifying an existing table will result
                     in the parameters being applied
                     cumulatively. Only a single time-stamp for all
                     calibrations are supported, currently.  Do not
                     use a caltable created by gaincal, bandpass,
                     etc. 

                        Example: caltable='test.G'
</description>
         <value/>
      </param>

      <param name="caltype" type="string">
<shortdescription>The calibration type: (amp, ph, sbd, mbd, antpos, antposvla, tsys, evlagain, opac, gc, gceff, eff, tecim)</shortdescription>
<description>The calibration parameter type being specified
                     Default: none
                     Options: 'amp', 'ph', 'sbd', 'mbd', 'antpos',
                     'antposvla', 'tsys', 'evlagain', 'opac', 'gc',
                     'gceff', 'eff', 'tecim'

                     * 'amp' = gain (G) amplitude (1 real parameter
                       per pol, antenna, spw)
                     * 'ph'  = gain (G) phase (deg) (1 real parameter
                       per pol, antenna, spw)
                     * 'sbd' = single-band delays (nsec) (1 real
                       parameter per pol, antenna, spw)
                     * 'mbd' = multi-band delay (nsec) (1 real
                       parameter per pol, antenna, spw)
                     * 'antpos' = antenna position corrections (m) (3
                       real ITRF offset parameters per antenna; spw,
                       pol selection will be ignored)
                       With antenna='', this triggers an automated
                       lookup of antenna positions for EVLA and ALMA.
                     * 'antposvla' = antenna position corrections (m)
                       specified in the old VLA-centric coordinate
                       system
                     * 'tsys' = Tsys from the SYSCAL table (ALMA)
                     * 'evlagain' = EVLA switched-power gains
                       (experimental)
                     * 'opac' = Tropospheric opacity (1 real parameter
                       per antenna, spw)
                     * 'gc' = Antenna zenith-angle dependent gain
                       curve (auto-lookup)
                     * 'gceff' = Gain curve and efficiency
                       (auto-lookup)
                     * 'eff' = Antenna efficiency (auto-lookup)

                        Example: caltype='ph'
</description>
         <value/>
                        <allowed kind="enum">
                            <value>amp</value>
                            <value>ph</value>
                            <value>sbd</value>
                            <value>mbd</value>
                            <value>antpos</value>
                            <value>antposvla</value>
                            <value>tsys</value>
                            <value>evlagain</value>
                            <value>swpow</value>
                            <value>rq</value>
                            <value>swp/rq</value>
                            <value>opac</value>
                            <value>gc</value>
                            <value>gceff</value>
                            <value>eff</value>
                            <value>tecim</value>
                        </allowed>
      </param>


      <param subparam="true" name="infile" type="string">
<shortdescription>Input ancilliary file</shortdescription>
<description>Input ancilliary file
                    Subparameter of caltype='gc|gceff|tecim'
                    Default: none
</description>
         <value/>
      </param>

      
      <param name="spw" type="string">
<shortdescription>Select spectral window/channels</shortdescription>
<description>Select spectral window/channels
                     Default: '' (all spectral windows and channels)
           
                        Examples:
                        spw='0~2,4'; spectral windows 0,1,2,4 (all channels)
                        spw='&lt;2';  spectral windows less than 2 (i.e. 0,1)
                        spw='0:5~61'; spw 0, channels 5 to 61
                        spw='0,10,3:3~45'; spw 0,10 all channels, spw
                        3 - chans 3 to 45.
                        spw='0~2:2~6'; spw 0,1,2 with channels 2
                        through 6 in each.
                        spw = '*:3~64'  channels 3 through 64 for all sp id's
                        spw = ' :3~64' will NOT work.
</description>
         <value/>
      </param>
      
      <param name="antenna" type="string">
<shortdescription>Select data based on antenna/baseline</shortdescription>
<description>Select data based on antenna/baseline
                     Subparameter of selectdata=True
                     Default: '' (all)

                     If antenna string is a non-negative integer, it
                     is assumed an antenna index, otherwise, it is
                     assumed as an antenna name
  
                         Examples: 
                         antenna='5&amp;6'; baseline between antenna
                         index 5 and index 6.
                         antenna='VA05&amp;VA06'; baseline between VLA
                         antenna 5 and 6.
                         antenna='5&amp;6;7&amp;8'; baselines with
                         indices 5-6 and 7-8
                         antenna='5'; all baselines with antenna index
                         5
                         antenna='05'; all baselines with antenna
                         number 05 (VLA old name)
                         antenna='5,6,10'; all baselines with antennas
                         5,6,10 index numbers
</description>
         <value/>
      </param>

      <param name="pol" type="string">
<shortdescription>Calibration polarizations(s) selection</shortdescription>
<description>Polarization selection for specified parameters
                     Default: pol='' (specified parameters apply to
                     all polarizations)

                        Example: pol='R' (specified parameters to
                        apply to R only)
</description>
         <value/>
      </param>

      <param name="parameter" type="doubleVec">
<shortdescription>The calibration values</shortdescription>
<description>The calibration values

                     The calibration parameters, specified as a list,
                     to store in the caltable for the spw, antenna,
                     and pol selection.  The required length of the
                     list is determined by the caltype and the spw,
                     antenna, pol selection.  One &quot;set&quot; of parameters
                     (e.g., one value for 'amp', 'ph', etc., three
                     values for 'antpos') specified the same value for
                     all indicated spw, antenna, and pol.
                     OR, 
                     When specifying a long list of calibration
                     parameter values, these should be ordered first
                     (fastest) by pol (if pol!=''), then by antenna
                     (if antenna!=''), and finally (sloweset) by spw
                     (if spw!='').  Unspecified selection axes must
                     not be enumerated in the parameter list
</description>
         <value/>
      </param>

      <param subparam="true" name="uniform" type="bool">
<shortdescription>Assume uniform calibration values across the array</shortdescription>
<description>Assume uniform calibration values across the array
                    Subparameter of caltype='tsys'
                     Default: True
                     Options: True|False
</description>
         <value>True</value>
      </param>


            <constraints>
              <when param="caltype">
                <equals value="tecim">
                   <default param="infile"><value type="string"/></default>
                </equals>
                <equals value="gc">
                   <default param="infile"><value type="string"/></default>
                </equals>
                <equals value="gceff">
                   <default param="infile"><value type="string"/></default>
                </equals>
      <equals value="tsys">
        <default param="uniform"><value type="bool">True</value></default>
      </equals>
         </when>
            </constraints>

   </input>
<returns type="void"/>

<example>
FOR MORE INFORMATION, SEE THE TASK PAGES OF GENCAL IN CASA DOCS:
https://casa.nrao.edu/casadocs/
 </example>
 </task>
 </casaxml>
