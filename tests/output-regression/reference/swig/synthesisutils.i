/******************** generated by xml-casa (v2) from synthesisutils.xml ************
********************* 446f8d72a8d4a8d7938e884151ff05b6 *****************************/
%module synthesisutils
%include <casa_typemaps.i>
%feature("kwargs");
%feature("autodoc", "0");

%feature("docstring", "

Summary:
    Partition data selection parameters for continuum imaging

Input Parameters:
    selpars                   All selection parameters for one or more MSs
    npart                     Number of partitions

--------------------------------------------------------------------------------
") contdatapartition;

%feature("docstring", "

Summary:
    Partition data selection parameters for CUBE imaging

Description:


returns a dictionary with data spectral parttiion that maps  data  to  nparts
of the input range frequency... usually to be used for doing data selection
when imaging a cube from fstart to fend in npart subcubes

Input Parameters:
    selpars                   All selection parameters for one or more MSs
    npart                     Number of partitions
    fstart                    start frequency of cube image
    fend                      end frequency of cube image
    frame                     frame of fstart and fend

Example:

##make a synthesisutils tool
siu=casac.synthesisutils()
### define first ms parameters
msrec={'msname':'ngc5921.ms.contsub', 'field':'0', 'spw':'0'}
pars={'ms0':msrec}
##  can add ms1, ms2 etc for multiple ms  into dictionary pars

##now get the data selections for 20 subpart of a cube that
## spans from 1.412787GHz to 1.413287GHz
siu.cubedatapartition(selprs=pars, npart=20, fstart='1.412787GHz', fend='1.413287GHz', frame='LSRK')

--------------------------------------------------------------------------------
") cubedatapartition;

%feature("docstring", "

Summary:
    Partition image cube parameters for CUBE deconvolution

Input Parameters:
    impars                    All imaging parameters for one or more image fields
    npart                     Number of partitions

--------------------------------------------------------------------------------
") cubeimagepartition;

%feature("docstring", "

Summary:
    Partition data/image cube parameters for CUBE deconvolution

Input Parameters:
    selpars                   All selection parameters for one or more MSs
    incsys                    input coordinate system
    npart                     Number of partitions
    nchannel                  Number of channels

--------------------------------------------------------------------------------
") cubedataimagepartition;

%feature("docstring", "

Summary:
    Check and Fix Selection Parameters for one MS

Input Parameters:
    selpars                   All selection parameters for one MS

--------------------------------------------------------------------------------
") checkselectionparams;

%feature("docstring", "

Summary:
    Check and Fix Imaging Parameters for one field

Input Parameters:
    impars                    All imaging parameters for one image-field

--------------------------------------------------------------------------------
") checkimageparams;

%feature("docstring", "

Summary:
    Check and Fix Gridding/FTM Parameters for one field

Input Parameters:
    gridpars                  All gridding/ftm parameters for one image-field

--------------------------------------------------------------------------------
") checkgridparams;

%feature("docstring", "

Summary:
    check the consistency between the csys record and other impars and update/modify impars if necessary

Input Parameters:
    impars                    All image parameters of one image-field

--------------------------------------------------------------------------------
") updateimpars;

%feature("docstring", "

Summary:
    Get Optimum Image size

Input Parameters:
    size                      Input size

--------------------------------------------------------------------------------
") getOptimumSize;

%feature("docstring", "

Summary:
    Close the tool

--------------------------------------------------------------------------------
") done;

%exception {
   try {
      $action
      } catch (const casacore::AipsError &ae) {
         PyErr_SetString(PyExc_RuntimeError, ae.what());
	 //PyErr_Print();
         return NULL;
      }
}
%include "synthesisutils_cmpt.h"

%{
#include <exception>
#include <synthesisutils_cmpt.h>
%}

