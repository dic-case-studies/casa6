#ifndef _FUNCTIONAL_XML_FUNCTIONAL_CMPT_
#define _FUNCTIONAL_XML_FUNCTIONAL_CMPT_
/******************** generated by xml-casa (v2) from functional.xml ****************
********************* 310465241093cdcbf90ad6c88759384b *****************************/

#include <vector>
#include <string>
#include <complex>
#include <stdcasa/record.h>
#include <casaswig_types.h>
#include <casa/Exceptions/Error.h>
#include <functional_forward.h>


using namespace std;

namespace casac {

  class  functional  {
    public:

      functional();
      variant* f(const variant& _x=variant( ));
      long ndim();
      bool done();
      casac::functional* gaussian1d(double _amplitude=double(1), double _center=double(0), double _fwhm=double(1));
      casac::functional* gaussian2d(double _amplitude=double(1), const std::vector<double>& _center=std::vector<double>({-1}), const std::vector<double>& _fwhm=std::vector<double>({-1}), const variant& _pa=variant( ));
      casac::functional* polynomial(const std::vector<double>& _coefficients=std::vector<double>({0}));
      casac::functional* powerlogpoly(const std::vector<double>& _coefficients=std::vector<double>({0}));

        ~functional( );

    private:

#include <functional_private.h>


      // --- declarations of static parameter defaults ---
    public:

  };

}

#endif
