<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" ?>
<casaxml xmlns="http://casa.nrao.edu/schema/psetTypes.html"
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
xsi:schemaLocation="http://casa.nrao.edu/schema/casa.xsd
file:///opt/casa/code/xmlcasa/xml/casa.xsd">
  
<task type="function" name="simanalyze" category="simulation">

  <shortdescription>image and analyze measurement sets created with simobserve</shortdescription>
  <description>
    This task is for imaging and analyzing measurement sets (MSs) simulated 
      with simobserve or simalma.   
  </description>
  <example>
      * "project" needs to be the directory of results generated by running 
        simobserve or simalma. In particular $project/$project.skymodel 
        will be required in order to compare output and input images.

    -------------------------------
    mode image=True:
      * One should input one or more simulated MSs using the "vis" parameter.  
        These can include a total power MS. 
        Simanalyze will grid any total power MS, 
        clean (invert and deconvolve) any interferometric MSs, 
        and feather the results. 

      * the "vis" parameter:
        - example: single MS: vis="mysim.alma.out03.ms"
        - example: multiple MSs: vis="mysim.alma.out03.ms,mysim.aca.tp.ms"
        - one can use "$project" and let the task automatically replace it with
          the project name, e.g., vis="$project.noisy.ms,$project.noisy.sd.ms".
          However, note that if you created measurement set(s) using simobserve,
          MS names will include the configuration, e.g. 
          "$project.alma_out20.noisy.ms"
        - setting "vis" to "default" will find and attempt to image
          all measurement sets (interferometric and single dish) in the 
          project directory

      * Sometimes it is preferable to grid the single dish MS using the 
        sdimaging task for more control.  In that case one can input 
        the resulting single dish imaging under "featherimage", only 
        put interferometric MSs in "vis", and simanalyze  will clean the 
        interferometric and feather with your "featherimage".

      * Sometimes it is preferable to use a low resolution (single dish or 
        synthesis) image as a prior model during clean deconvolution
        of a higher resolution interferometric MS.  That is accomplished 
        by putting the low-resolution image in "modelimage" and the MS
        to be deconvolved in "vis". NOTE: This is not the original skymodel
        that was used in simobserve or simalma.  It is recommended to 
        leave this blank unless the user is familiar with using a prior 
        in clean deconvolution. (see casaguides) NOTE 2: modelimage will 
        not be used if the MS to be imaged is total power.
       
      * uses Cotton-Schwab clean for single fields and Mosaic gridding
        for multiple fields (with Clark PSF calculation in minor cycles).

      * interactive clean or use of more parameters than the subset 
        visible here are available by simply running the clean task directly, 
        then using simanalyze in the mode image=False (see below).

      * if graphics are turned on, this step will display the clean image 
        and residual image

      * the "mask" parameter:
        Specification of cleanbox(es), mask image(s), primary beam
        coverage level, and/or region(s) to be used for cleaning.
        clean tends to perform better, and is less likely to diverge, if 
        the clean component placement is limited by a mask to where real 
        emission is expected to be.  e.g. pixel ranges mask=[110,110,150,145],
        filename of mask image mask='myimage.mask', or a file with mask 
        regions --  see help for the clean task for more information.

      * NOTE: simanalyze was designed to be used after one or more runs of
        simobserve, and as such it assumes it will be able to find a 
        sky model image called $project/$project.skymodel, .newmodel, or 
        .compskymodel in the $project/ subdirectory.  If the simulated 
        MS has been created by means other than simply calling simobserve, 
        the user may have to copy their sky model image into the $project
        subdirectory and call it "$project.skymodel"

    -------------------------------
    mode image=False:
      * Sometimes the user has created a synthesized image themselves, 
        most likely using the clean task, perhaps along with 
        sdimaging and feather, or a previous call to simanalyze with image=True 
      * The user should input that simulated image as "imagename".  
        It will have suffix .image if created by clean, simanalyze, or simalma
      * simanalyze will attempt to find an appropriate skymodel image - 
        this is the *.skymodel image created by simobserve or simalma, 
        the (optionally rescaled) original sky model, which was used 
        to create the measurement set.
        simanalyze will look in the project directory, but if there are 
        multuple skymodels present it may not find the right one, so the
        "skymodel" parameter allows explicit specification.

    -------------------------------
    mode analyze=True is used to create an image of the difference between 
        the input skymodel and the simulated output image (whether that output
        image is being generated in the same call to simanalyze, with 
        image=True, or has already been generated, and simanalyze is being 
        called with image=False).

    showuv -- display uv coverage
    showpsf -- display synthesized (dirty) beam (ignored in single dish simulation)
    showmodel -- display sky model at original resolution
    showconvolved -- display sky model convolved with output beam 
    showclean -- display the synthesized image
    showresidual -- display the clean residual image (ignored in single dish simulation)
    showdifference -- display difference between output cleaned image and 
         input model sky image convolved with output clean beam
    showfidelity -- display fidelity image
         fidelity = abs(input) / max[ abs(input-output), 0.7*rms(output) ]
    

    Note that the RMS is calculated in the lower quarter of the image.  
         This is likely not the best choice, so you are encouraged to 
         measure RMS yourself in an off-source region using the viewer.

    dryrun=True is an advanced technical mode only useful for interferometric 
         (not single dish) data. 

    -------------------------------
    Output produced: (not all will always exist, depending on input parameters)
    To support different runs with different arrays, the names have the
    configuration name from antennalist appended.
    -------------------------------
    project.[cfg].skymodel.flat.regrid.conv = input sky regridded to match 
         the output image, and convolved with the output clean beam

    project.[cfg].image = synthesized image
    project.[cfg].flux.pbcoverage = primary beam correction for mosaic image
    project.[cfg].residual = residual image after cleaning
    project.[cfg].clean.last = parameter file of what parameters were used in
          the clean task
    project.[cfg].psf = synthesized (dirty) beam calculated from weighted uv 
          distribution
    project.[cfg].image.png = diagnostic figure of clean image and residual

    project.[cfg].fidelity = fidelity image
    project.[cfg].analysis.png = diagnostic figure of difference and fidelity

    project.[cfg].simanalyze.last = saved input parameters for simanalyze task

    -------------------------------
    Please see http://casaguides.nrao.edu, and contact the CASA helpdesk 
    with questions.
  </example>
  
  <input>
    
    <param type="string" name="project">
      <shortdescription>root prefix for output file names</shortdescription>
      <description>
        root prefix for input and output file names.  
        This must be the directory of results generated by running 
        simobserve or simalma. In particular $project/$project.skymodel 
        will be required in order to compare output and input images.
      </description>
      <value>sim</value>
    </param>
    


<!--  IMAGE   -->    

    <param type="bool" name="image">
      <description>(re)image $project.*.ms to $project.image</description>
      <value>True</value>
    </param>    

    <!-- if IMAGE==False -->
    
    <param type="string" name="imagename" subparam='true'>
      <description>simulation output image to analyze (default = first $project/*.image found)</description>
      <value>default</value>
    </param>

    <param type="string" name="skymodel" subparam='true'>
      <description>skymodel image to analyze (the .skymodel image created by simobserve or simalma and used by one of those tasks to create an MS; if unspecified, will try to find one similar to your specified output image name)</description>
      <value/>
    </param>

    <!-- if IMAGE==True -->

    <param type="string" name="vis" subparam='true'>
      <description>Measurement Set(s) to image</description>
      <value>default</value>
    </param>

    <param type="string" name="modelimage" subparam='true'>
      <description>lower resolution prior image to use in clean e.g. existing total power image</description>
      <value type="string"></value>
    </param>
    
    <param type="intArray" name="imsize" subparam="true">
      <description>output image size in pixels (x,y) or 0 to match model</description>
      <value type="intArray"><value>0</value><value>0</value></value>
    </param>

    <param type="string" name="imdirection" subparam="true">
      <description>set output image direction, (otherwise center on the model)</description>
      <value type="string"></value>
    </param>

    <param type="string" name="cell" subparam='true'>
      <description>cell size with units e.g. "10arcsec" or "" to equal model</description>
      <value type="string"></value>
    </param>
    
    <param type="bool" name="interactive" subparam='true'>
      <description>interactive clean?  (make sure to set niter&gt;0 also)</description>
      <value type="bool">False</value>
    </param>


<!-- force the same channelization as the ms -->
<!--
    <param type="string" name="start" subparam="true">
      <description>frequency of first channel (default=ms)</description>
      <value>89GHz</value>
    </param>    
    <param type="string" name="width" subparam="true">
      <description>channel width (default=ms)</description>
      <value>10MHz</value>
    </param>
    <param type="int" name="nchan" subparam="true">
      <description>number of channels or -1 for full range</description>
      <value>-1</value>
    </param>
-->    
    <param type="int" name="niter" subparam="true">
      <description>maximum number of iterations (0 for dirty image)</description>
      <value>0</value>
    </param>

    <param type="string" name="threshold" subparam="true">
      <description>flux level (+units) to stop cleaning</description>
      <value>0.1mJy</value>
    </param>

    <param type="string" name="weighting" subparam="true">
      <description>weighting to apply to visibilities.  briggs will use robust=0.5</description>
      <value>natural</value>
      <allowed kind="enum">
  <value>natural</value>
  <value>uniform</value>
  <value>briggs</value>  <!-- robust=0.5  -->
      </allowed>
    </param>

    <param type="any" name="mask" subparam="true">
      <description>Cleanbox(es), mask image(s), region(s), or a level</description>
      <any type="variant"/>
      <!-- <value type="stringArray"></value> -->
      <value type="intArray"></value>
    </param>

    <param type="stringArray" name="outertaper" subparam="true">
      <description>uv-taper on outer baselines in uv-plane</description>
    <value/>
    </param>

    <param type="bool" name="pbcor" subparam="true">
      <description>correct the output of synthesis images for primary beam response?</description>
      <value type="bool">True</value>
    </param>

    <param type="string" name="stokes" subparam="true">
      <description>Stokes params to image</description>
      <value>I</value>
      <allowed kind="enum">
  <value>I</value>
  <value>IV</value>
  <value>QU</value>
  <value>IQUV</value>
  <value>RR</value>
  <value>LL</value>
  <value>RRLL</value>
  <value>XX</value>
      <value>YY</value>
      <value>XXYY</value>
      </allowed>
    </param>

    <param type="string" name="featherimage" subparam='true'>
      <description>image (e.g. total power) to feather with new image</description>
      <value/>
    </param>







<!--  ANALYZE   -->    
    
    <param type="bool" name="analyze">
      <description>(only first 6 selected outputs will be displayed)</description>
      <value>False</value>
    </param>

<!--    
    <param type="string" name="sim_image" subparam="true">
      <description>simulated image, created by this task or manually</description>
      <value>$project/$project.image</value>
    </param>
-->

    <param type="bool" name="showuv" subparam="true">
      <description>display uv coverage</description>
      <value>True</value>
    </param>

    <param type="bool" name="showpsf" subparam="true">
      <description>display synthesized (dirty) beam (ignored in single dish simulation)</description>
      <value>True</value>
    </param>

    <param type="bool" name="showmodel" subparam="true">
      <description>display sky model at original resolution</description>
      <value>True</value>
    </param>
    
    <param type="bool" name="showconvolved" subparam="true">
      <description>display sky model convolved with output clean beam</description>
      <value>False</value>
    </param>
    
    <param type="bool" name="showclean" subparam="true">
      <description>display the synthesized image</description>
      <value>True</value>
    </param>

    <param type="bool" name="showresidual" subparam="true">
      <description>display the clean residual image (ignored in single dish simulation)</description>
      <value>False</value>
    </param>

    <param type="bool" name="showdifference" subparam="true">
      <description>display difference between output cleaned image and input model sky image convolved with output clean beam</description>
      <value>True</value>
    </param>
    
    <param type="bool" name="showfidelity" subparam="true">
      <description>display fidelity (see help)</description>
      <value>True</value>
    </param>





    <param type="string" name="graphics">
      <description>display graphics at each stage to [screen|file|both|none]</description>
      <value type="string">both</value>
      <allowed kind="enum">
  <value>screen</value>
  <value>file</value>
  <value>both</value>
  <value>none</value>
  <value></value>
      </allowed>
    </param>

    <param type="bool" name="verbose">
      <description></description>
      <value>False</value>
    </param>

    <param type="bool" name="overwrite">
      <description>overwrite files starting with $project</description>
      <value>True</value>
    </param>

    <param type="bool" name="dryrun" visibility="hidden">
      <description>only print information [experimental; only for interfermetric data]</description>
      <value>False</value>
    </param>

    <param type="string" name="logfile">
      <description></description>
      <value/>
    </param>



        
    
<!--  CONSTRAINTS  -->    
    
    <constraints>
      <when param="image">
  <equals type="bool" value="True">
    <default param="vis"><value type="string">default</value></default>
    <default param="modelimage"><value type="string"></value></default>
    <default param="imsize">
      <value>0</value>
    </default>
    <default param="imdirection">
      <value type="string"></value>
    </default>
    <default param="cell"><value type="string"></value></default>
    <default param="interactive"><value>False</value></default>
    <default param="niter"><value>0</value></default>
    <default param="threshold"><value type="string">0.1mJy</value></default>
    <default param="weighting"><value type="string">natural</value></default>
    <default param="mask">      <value type="intArray"></value></default>
    <default param="outertaper"><value type="stringArray"></value></default>
    <default param="pbcor"><value type="bool">True</value></default>
    <default param="stokes"><value type="string">I</value></default>
    <default param="featherimage"><value type="string"></value></default>

  </equals>
  <equals type="bool" value="False">
    <default param="imagename"><value type="string">default</value></default>
    <default param="skymodel"><value type="string"></value></default>
  </equals>
      </when>
      <!-- **********************************************************  -->
      <when param="analyze">
  <equals type="bool" value="False"/>
  <equals type="bool" value="True">
<!--
    <default param="sim_image"><value>$project/$project.image</value></default>
-->
    <default param="showuv"><value type="bool">True</value></default>
    <default param="showpsf"><value type="bool">True</value></default>
    <default param="showmodel"><value type="bool">True</value></default> 
    <default param="showconvolved"><value type="bool">False</value></default>
    <default param="showclean"><value type="bool">True</value></default>
    <default param="showresidual"><value type="bool">False</value></default>
    <default param="showdifference"><value type="bool">True</value></default>
    <default param="showfidelity"><value type="bool">True</value></default>
  </equals>
      </when>
    </constraints>
    
    
    
  </input>
  <returns type="void"/>
  
</task>
</casaxml>
