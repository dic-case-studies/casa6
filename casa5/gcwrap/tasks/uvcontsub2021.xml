<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" ?>
<casaxml xmlns="http://casa.nrao.edu/schema/psetTypes.html"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://casa.nrao.edu/schema/casa.xsd
                             file:///opt/casa/code/xmlcasa/xml/casa.xsd">

  <task type="function" name="uvcontsub2021" category="manipulation">
    <shortdescription>continuum subtraction in the uv plane</shortdescription>
    <description/>

    <!-- Input/ouput MSs -->
    <input>
      <param name="vis" type="string" mustexist="true">
        <shortdescription>Name of input visibility file (MeasurementSet)</shortdescription>
        <description>Name of input visibility file.
                     Default: '', must be specified

                        Example: vis='ngc5921.ms'
        </description>
        <value/>
      </param>

      <param name="outputvis" type="string">
        <shortdescription>Name of output MeasurementSet (visibility file)</shortdescription>
        <description>Name of output visibility file
                     Default: '', must be specified

                     Example: outputvis='ngc5921_contsub.ms'

                     If an MS with the output name already exists, it
                     will not be overwritten and the task stops with
                     an error.
        </description>
        <value/>
      </param>

      <!-- MMS-CASE parameter -->
      <!-- Removed for now, as per dicussion in devel google doc
      <param name="keepmms" type="bool">
        <shortdescription>If the input is a Multi-MS the output will
        also be a Multi-MS.</shortdescription>
        <description>Create a Multi-MS as the output if the input is a
        Multi-MS.

                     Default: True
                     Options: True|False

                     By default it will create a Multi-MS when the
                     input is a Multi-MS. The output Multi-MS will
                     have the same partition axis of the input
                     MMS. See CASA Docs for more information on
                     the MMS format.
        </description>
        <value>True</value>
        </param>
        -->

      <!-- SELECTION parameters -->    
      <param name="field" type="string">
        <shortdescription>Select field using field id(s) or field name(s)</shortdescription>
        <description>Select field using field id(s) or field name(s)
                     Default: '' (all fields)

                     Use 'listobs' to obtain the list of id's or
                     names. If field string is a non-negative integer,
                     it is assumed a field index,  otherwise, it is
                     assumed a field name.

                        Examples:
                        field='0~2'; field ids 0,1,2
                        field='0,4,5~7'; field ids 0,4,5,6,7
                        field='3C286,3C295'; field named 3C286 and
                        3C295
                        field = '3,4C*'; field id 3, all names
                        starting with 4C
        </description>
        <value/>
      </param>

      <param name="spw" type="string">
        <shortdescription>Select spectral window/channels</shortdescription>
        <description>Select spectral window/channels
                     Default: '' (meaning all spectral windows and channels)
           
                        Examples:
                        spw='0~2,4'; spectral windows 0,1,2,4 (all channels)
                        spw='&lt;2';  spectral windows less than 2 (i.e. 0,1)
                        spw='0:5~61'; spw 0, channels 5 to 61
                        spw='0,10,3:3~45'; spw 0,10 all channels, spw
                        3 - chans 3 to 45.
                        spw='0~2:2~6'; spw 0,1,2 with channels 2
                        through 6 in each.
                        spw = '*:3~64'  channels 3 through 64 for all sp id's
                        spw = ' :3~64' will NOT work.
        </description>
        <value/>
      </param>
    
      <param name="scan" type="string">
        <shortdescription>Select scans by scan numbers</shortdescription>
        <description>Select scans by scan numbers
                     Default: '' = all

                     Examples:
                     scan='3'
                     scan='2~23'
                     scan=''4,7,9,12'
        </description>
        <value/>
      </param>

      <param name="intent" type="string">
        <shortdescription>Select observing intent</shortdescription>
        <description>Select observing intent
                     Default: '' (no selection by intent)

                     Example: intent='*BANDPASS*'  (selects data
                              labelled with BANDPASS intent)
        </description>
        <value/>
      </param>
    
      <param name="array" type="string">
        <shortdescription>Select (sub)array(s) by array ID number</shortdescription>
        <description>Select (sub)array(s) by array ID number
                     Default: '' (all)
        </description>
        <value/>
      </param>

      <param name="observation" type="string">
        <shortdescription>Select by observation ID(s)</shortdescription>
        <description>Select by observation ID(s)
                     Subparameter of selectdata=True
                     Default: '' = all

                         Example: observation='0~2,4'
        </description>
        <value/>
      </param>

      <!--
      <param name="correlation" type="string">
        <shortdescription>Select data based on correlation</shortdescription>
        <description>Select data based on correlation
                     Default: '' ==> all

                        Example: correlation="XX,YY".
        </description>
        <value/>
      </param>
      -->

      <!-- Finally, task parameters, proper -->
      <param name="datacolumn" type="string" ignorecase="True">
        <shortdescription>Which data column(s) to process</shortdescription>
        <description>Which data column(s) to use for processing
                     (case-insensitive).
                     Default: 'data'
                     Options: 'data', 'model', 'corrected',
                     'float_data', 'lag_data',

                     Example: datacolumn='corrected'
        </description>
        <value>data</value>
        <allowed kind="enum" ignorecase="True">
          <value>data</value>
          <value>model</value>
          <value>corrected</value>
          <value>float_data</value>
          <value>lag_data</value>
        </allowed>
      </param>

      <!-- double-check this -->
      <param name="fitspw" type="any">
        <shortdescription>Spectral window:channel selections for fitting the continuum</shortdescription>
        <description>Spectral window:channel selections for fitting,
        per field. The continuum will be fitted using as input the
        selected channels, which can be considered the line-free
        channels.  Must be a list with up to as many elements as
        fields have been selected from the input MS. Each element of
        the list specifies a pair [field-ID(s), spw:channel-selection].
<!-- Fields can be given as ***********        field ID or name.  -->
        If a field or SPW is not included, the default (all channels)
        is assumed.

                     Default: [] (all channels for all SPWs for all fields)
                     Examples:
                     (assuming: 4 SPWs, with IDs 17, 19, 21, 23.
                                5 fields, with IDs 0, 1, 4, 5, 6)
                     [
                      ['0', ''],
<!--                      ['M82', '17:8~120,19:7~10;20~119,21'] -->
                      ['1', '17:8~120,19:7~100;21~119,23']
                      ['4,5,6', ',19:7~119,21,23']
                     ]
                     (field 0: fit all SPWs and channels (same as not giving it),
                      only some channel ranges for field 1 (all for SPW 23),
                      only some channel ranges for fields 4,5,6 in SPW 19,
                      all channels for SPWs 21 and 23, and don't fit SPWs 17)
<!--                      ['2, 'NONE'] -->
        In this example, the empty string given for field 0 means that
        all the channels are fitted (and subtracted) in all the
        SPWs. For the corner case where for a given field no channels
        should be fitted in any SPW, the spw:channels string can be
        set to 'NONE'.

        This selection of SPWs and channels uses a syntax similar to
        the spw parameter. But here the SPWs and channels are used as
        a mask applied on the input data only for fitting
        purposes. The channels that are not selected are masked out
        and not used as input by the fitting algorithm. This is
        different from the spw parameter, which selects the data that
        is included in the output.
        </description>
        <any type="variant" limittypes="string stringArray"/>
        <value type="string"/>
      </param>

      <param name="fitmethod" type="string" ignorecase="True">
        <shortdescription>Choose fitting method</shortdescription>
        <description>Choose fitting methods
                     Default: 'gsl'
                     Options: 'gsl', 'casacore'

                     Example: fitmethod='gsl'
        </description>
        <value>gsl</value>
        <allowed kind="enum" ignorecase="True">
          <value>gsl</value>
          <value>casacore</value>
        </allowed>
      </param>

      <param name="fitorder" type="int">
        <shortdescription>Polynomial order for the fits</shortdescription>
        <description>Polynomial order for the fits</description>
        <value>0</value>
      </param>
    
      <param name="writemodel" type="bool">
        <shortdescription>Write fitted model into the MODEL column of the output MS</shortdescription>
        <description>Write fitted model into the MODEL column of the
        output MeasurementSet.

                     Default: False
                     Options: True|False

                     By default the task creates an MS with the
                     continuum subtracted data in the DATA column. If
                     this option is enabled, the task will also write
                     the fitted model data into the MODEL column of the
                     output MS.
        </description>
        <value>False</value>
      </param>

      <!-- CONSTRAINTS -->
      <constraints>          
      </constraints>
    </input>
    
    <example>
      For more information, see the task pages of uvcontsub in CASA Docs:
      https://casadocs.readthedocs.io
    </example> 
  </task>
</casaxml>
