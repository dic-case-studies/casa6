<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" ?>
<casaxml xmlns="http://casa.nrao.edu/schema/psetTypes.html"
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
xsi:schemaLocation="http://casa.nrao.edu/schema/casa.xsd
file:///opt/casa/code/xmlcasa/xml/casa.xsd">
  
<task type="function" name="simobserve" category="simulation">
<shortdescription>visibility simulation task</shortdescription>
<description>
This task simulates interferometric or total power measurment sets. It
is currently optimized for JVLA and ALMA, although many observatories
are included, and adding your own is simply a matter of providing an
antenna location file (see below).
    
simobserve is meant to work in conjunction with the simanalyze
task. Calling simobserve one more times will produce simulated
measurement set(s), which are then gridded, inverted and deconvolved
into output simulated images using simanalyze.
    
ALMA users are encouraged to use the simalma task, which provides
additional information on the multiple simobserve and simanalyze calls
required to simulate an ALMA observation which may consist of 12m
interferometric, 7m interferometric, and 12m total power data.
    
More information and examples are availible at 
http://casaguides.nrao.edu/index.php?title=Simulating_Observations_in_CASA
Please contact the Helpdesk with any questions (see
https://casa.nrao.edu/help_desk_all.shtml)
</description>
<example>
  </example>
  
  <input>
    
    <param type="string" name="project">
<shortdescription>Root prefix for output file names</shortdescription>
<description>root prefix for output file names</description>
      <value>sim</value>
    </param>
    



    <!-- all parms default to keep what's in the image, if the param=="" -->

    <param type="string" name="skymodel">
<shortdescription>model image to observe</shortdescription>
<description>Model image to observe

                   * simobserve uses a CASA or fits image. If you
                     merely have a grid of numbers, you will need to
                     write them out as fits or write a CASA script to
                     read them in and use the ia tool to create an
                     image and insert the data.

                   * simobserve does NOT require a coordinate system
                     in the header. If the coordinate information is
                     incomplete, missing, or you would like to
                     override it, set the appropriate "in"
                     parameters. NOTE that setting those parameters
                     simply changes the header values, ignoring any
                     values already in the image. No regridding is
                     performed. 

                   * You can also manipulate an image header manually
                     with the "imhead" task. 

                   * If you have a proper Coordinate System,
                     simobserve will do its best to generate
                     visibilities from that. 
</description>
      <value type="string"></value>
    </param>

    <param type="string" name="inbright" subparam='true'>
      <shortdescription>Peak brightness to scale the image to in Jy/pixel</shortdescription>
<description>Peak brightness to scale the image to, in Jy/pixel
                     Subparameter of skymodel
                     Default: '' (i.e., unchanged)

                        Example: inbright='1.2Jy/pixel'

                     Note: "unchanged" will take the numerical values
                     in your image and assume they are in Jy/pixel,
                     even if it says some other unit in the header. 
</description>
       <value type="string"></value>
    </param>
    <!-- TODO parse Jy/pixel, MJy/Sr, eventually K, etc -->
    <!-- TODO document permitted units in online help -->

    <param type="string" name="indirection" subparam="true">
      <shortdescription>Set new direction, e.g. J2000 19h00m00 -40d00m00</shortdescription>
<description>Central direction to place the sky model image
                     Subparameter of skymodel
                     Default: '' (use whatever is in the image
                     already)

                        Example: indirection='J2000 19h00m00
                        -40d00m00'
</description>
      <value type="string"></value>
    </param>

    <param type="string" name="incell" subparam='true'>
      <shortdescription>Set new cell/pixel size, e.g. 0.1arcsec</shortdescription>
<description>set new cell/pixel size
                     Subparameter of skymodel
                     Default: '' (use whatever is in the image
                     already)

                        Example: incell='0.1arcsec'
</description>
      <value type="string"></value>
    </param>
    
    <param type="string" name="incenter" subparam="true">
      <shortdescription>Set new frequency of center channel e.g. 89GHz (required even for 2D model)</shortdescription>
<description>Frequency to use for the center channel (or only channel,
if the skymodel is 2D)
                     Subparameter of skymodel
                     Default: '' (use whatever is in the image
                     already)

                        Example: incenter='89GHz'
</description>
      <value type="string"></value>
    </param>    

    <param type="string" name="inwidth" subparam="true">
      <shortdescription>Set new channel width, e.g. "10MHz" (required even for 2D model)</shortdescription>
<description>Set new channel width 
                     Subparameter of skymodel
                     Default: '' (use whatever is in the image
                     already)
                     
                     Should be a string representing a quantity with
                     units e.g. inwidth='10MHz'

                     NOTES: 
                   * Only works reliably with frequencies, not
                     velocities 
                   * It is not possible to change the number of
                     spectral planes of the sky model, only to relabel
                     them with different frequencies That kind of
                     regridding can be accomplished with the CASA
                     toolkit.
</description>
      <value type="string"></value>
    </param>


    <param type="string" name="complist">
      <shortdescription>Componentlist to observe</shortdescription>
<description>Component list model of the sky, added to or instead of skymodel. See https://casaguides.nrao.edu/index.php/Simulation_Guide_Component_Lists_(CASA_5.4)
</description>
      <value></value>
    </param>

    <param type="string" name="compwidth" subparam="true">
      <shortdescription>Bandwidth of components</shortdescription>
<description>Bandwidth of components
                     Subparameter of complist

                     If simulating from components only, this defines
                     the bandwidth of the MS and output images

                        Example: compwidth='8GHz'
</description>
      <value>"8GHz"</value>
    </param>

    <param type="int" name="comp_nchan" subparam="true">
      <shortdescription>Channelization of components</shortdescription>
<description>Channelization of components
                     Subparameter of complist

                     If simulating from components only, this defines
                     the number of channels of the MeasurementSet

                        Example: comp_nchan=256
</description>
      <value>1</value>
    </param>



<!--*************************************************************-->
<!--*************************************************************-->


    <param type="bool" name="setpointings">
<shortdescription>Calculate a map of pointings?</shortdescription>
<description>If true, calculate a map of pointings and write ptgfile. If false, read pointings from ptgfile.
                     Default: True

                     If graphics are on, display the pointings shown
                     on the model image
</description>
      <value>True</value>
    </param>

    <param type="string" name="ptgfile" subparam="true">
<shortdescription>List of pointing positions</shortdescription>
<description>A text file specifying directions
                     Subparameter of setpointings=False
                     
                     The text file should have the following format,
                     with optional integration times:
                     Epoch     RA          DEC      TIME(optional)
                     J2000 23h59m28.10 -019d52m12.35 10.0

                     If the time column is not present in the file, it
                     will use "integration" for all pointings.

                     NOTE: at this time the file should contain only
                     science pointings: simobserve will observe these,
                     then optionally the calibrator, then the list of
                     science pointings again, etc, until totaltime is
                     used up.
 </description>
      <value type="string">$project.ptg.txt</value>
    </param>

    <param type="string" name="integration" subparam="true">
<shortdescription>Integration (sampling) time</shortdescription>
<description>Time interval for each integration
                     Subparameter of setpointings=False

                        Example: integration='10s'

                     NOTE: to simulate a "scan" longer than one
                     integration, use  setpointings to generate a
                     pointing file, and then edit the file to increase
                     the time at each point to be larger than the
                     parameter integration time.
</description>
      <value>10s</value> 
    </param>

<!--  The user can edit the ptg file to repeat ptgs if they wish a scan length
      Longer than the integration time
    <param type="variant" name="scanlength" subparam="true">
      <description>number of integrations or time per pointing</description>
      <value type="int">5</value>
    </param>
-->

    <param type="stringArray" name="direction" subparam="true">
<shortdescription>Mosaic center direction, e.g J2000 19h00m00 -40d00m00</shortdescription>
<description>Mosaic center direction.
                     Subparameter of setpointings=True

                        Example: "J2000 19h00m00 -40d00m00" or "" to
                        center on model

                     If unset, will use the center of the skymodel
                     image.
                   * can optionally be a list of pointings, otherwise
                   * simobserve will cover a region of size mapsize
                     according to maptype
</description>
      <value type="string"></value>
    </param>

    <param type="stringArray" name="mapsize" subparam="true">
<shortdescription>Angular size of mosaic map to simulate.</shortdescription>
<description>Angular size of of mosaic map to simulate.
                     Subparameter of setpointings=True

                     Set to "" to cover model
</description>
      <value type="vector">
  <value type="string"></value>
  <value type="string"></value>
      </value>
    </param>

    <param type="string" name="maptype" subparam="true">
<shortdescription>how to calculate the pointings for the mosaic observation: hexagonal, square (raster), ALMA, etc.</shortdescription>
<description>How to calculate the pointings for the mosaic
observation?
                     Subparameter of setpointings=True
                     Options: hexagonal, square (raster), ALMA, etc

                     "ALMA" for the same hex algorithm as the ALMA
                     Cycle 1 OT or "ALMA2012" for the algorithm used
                     in the Cycle 0 OT
</description>



      <value type="string">hexagonal</value>
      <allowed kind="enum">
  <value type="string">hexagonal</value>
  <value type="string">square</value>
  <value type="string">hex</value>
  <value type="string">ALMA</value>
  <value type="string">ALMA2012</value>
  <value type="string">alma</value>
  <value type="string">ALMA-OT</value>
      </allowed>
    </param>

    <param type="string" name="pointingspacing" subparam="true">
<shortdescription>Spacing in between pointings e.g. 0.25PB. ALMA default: INT=lambda/D/sqrt(3), SD=lambda/D/3 </shortdescription>
<description>Spacing in between pointings. 
                     Subparameter of setpointings=True

                        Examples: 
                        pointingspacing="0.25PB" 
                        pointingspacing="" for ALMA default
                        INT=lambda/D/sqrt(3), SD=lambda/D/3 
</description>
      <value></value>
    </param>

<!--
    <param type="any" name="relmargin">
      <any type="variant" limittypes="double int"/>
      <description>space btw. pointings and edge, relative to pointingspacing</description>
      <value type="double">1.0</value>
    </param>
-->







<!--*************************************************************-->
<!--  observe always reads from $project.skymodel file now -->


    <param type="string" name="caldirection" subparam="true">
<shortdescription>pt source calibrator [experimental]</shortdescription>
<description>pt source calibrator [experimental]</description>
      <value type="string"></value>
    </param>

    <param type="string" name="calflux" subparam="true">
<shortdescription>pt source calibrator flux [experimental]</shortdescription>
<description>pt source calibrator flux [experimental]</description>
      <value>1Jy</value>
    </param>

    <param type="string" name="obsmode">
<shortdescription>Observation mode to simulate [int(interferometer)|sd(singledish)|(none)]</shortdescription>
<description>Observation mode to simulate
                     Options: int(interferometer)|sd(singledish)|""(none)

                     Observation mode to calculate visibilities from a
                     skymodel image (which may have been modified
                     above), an optional component list, and a
                     pointing file (which also may have been generated
                     above).

                     This parameter takes two possible values:
                     - interferometer (or int)
                     - singledish (or sd)
                   * If graphics are on, this observe step will
                     display the array (similar to plotants), the uv
                     coverage, the synthesized (dirty) beam, and
                     ephemeris information 
                   * If simulating from a component list, you should
                     specify "compwidth", the desired bandwidth; and 
		     specify "comp_nchan", the desired channelization
		     if more than one output channel is desired
</description>
      <value>int</value>
      <allowed kind="enum">
  <value type="string"></value>
  <value type="string">int</value>
  <value type="string">sd</value>
      </allowed>
    </param>

    <param type="string" name="refdate" subparam="true">
<shortdescription>Date of observation. Not critical unless concatting simulations</shortdescription>
<description>Date of simulated observation
                     Subparameter of obsmode='int|sd'
                     Not critical unless concatting simulations

                        Example: refdate="2014/05/21"
</description>
      <value>2014/01/01</value>
    </param>

    <param type="string" name="hourangle" subparam="true">
<shortdescription>Hour angle of observation center, e.g. -3:00:00, 5h</shortdescription>
<description>Hour angle of observation center.
                     Subparameter of obsmode='int|sd'

                         Examples:
                         hourangle="-3:00:00", "5h", or "transit"
 </description>
      <value>transit</value>
    </param>
    
    <param type="string" name="totaltime" subparam="true">
<shortdescription>Total time of observation or number of repetitions</shortdescription>
<description>Total time of observation or number of repetitions
                     Subparameter of obsmode='int|sd'

                         Example:
                         totaltime='7200s'
                         If a number without units, interpreted as the
                         number of times to repeat the mosaic.
</description>
      <value>7200s</value>
    </param>

    <param type="string" name="antennalist" subparam="true">
<shortdescription>Interferometer antenna position file</shortdescription>
<description>Text file containing antenna positions.
                     Subparameter of obsmode='int|""'

                     Each row has x y z coordinates and antenna diameter
		     with optional station name and antenna name.
		     Header lines are required to specify:
                     # observatory=ALMA
                     # coordsys=UTM

		     If the Universal Transverse Mercator projection is
		     specified, then other keywords are required:
                     # datum=WGS84
                     # zone=19
		     # hemisphere=S

		     If the observatory keyword is not defined, then the
		     COFA keyword should be, using a coordinate pair:
		     #COFA=-67.75,-23.02

                   * Standard array configurations are found in your
		     CASA data repository,
                   * If "", simobserve will not not produce an
                     interferometric MS 
                   * A string of the form "alma;0.5arcsec" will be
                   parsed into a full 12m ALMA configuration.  
</description>
      <value></value>
    </param>

<!-- TODO put in more than one synth_antfile to do ALMA and ACA config - 
it'll do them for the same amount of time -->

    <param type="string" name="sdantlist" subparam="true">
<shortdescription>Single dish antenna position file</shortdescription>
<description>single dish antenna position file
                     Subparameter of obsmode='sd|""'
</description>
      <value>aca.tp.cfg</value>
    </param>

    <param type="int" name="sdant" subparam="true">
<shortdescription>Single dish antenna index in file</shortdescription>
<description>Index of the antenna in the list to use for total power.  
                     Subparameter of obsmode='sd|""'
                     Default: first antenna on the list. 
</description>
      <value>0</value>
    </param>

    <param type="string" name="outframe">
<shortdescription>Spectral frame of MS to create</shortdescription>
<description>spectral frame of MS to create
                     Subparameter of obsmode='sd|""'
</description>
      <value>LSRK</value>
    </param>



<!--  NOISE  -->

    <param type="string" name="thermalnoise">
<shortdescription>add thermal noise: [tsys-atm|tsys-manual|(none)]</shortdescription>
<description>add thermal noise.
                     Options: tsys-atm, tsys-manual, ""

                     This parameter accepts two settings:
                     - tsys-atm: J. Pardo's ATM library will be used
                     to construct an atmospheric profile for the ALMA
                     site: altitude 5000m, ground pressure 650mbar,
                     relhum=20%, a water layer of user_pwv at altitude
                     of 2km, the sky brightness temperature returned
                     by ATM, and internally tabulated receiver
                     temperatures.
                     - tsys-manual: instead of using the ATM model,
                     specify the zenith  sky brightness and opacity
                     manually.  Noise is added and then the visibility
                     flux scale is referenced above the atmosphere.

                     If left unset (empty string) no thermalnoise
                     corruption is performed.
 
                     In either mode, noise is calculated using an
                     antenna spillover efficiency of 0.96, taper of
                     0.86, surface accuracy of 25 and 300 microns for
                     ALMA and EVLA respectively (using the Ruze
                     formula for surface efficiency), correlator
                     efficiencies of 0.95 and 0.91 for ALMA and EVLA,
                     receiver temperatures 
                     for ALMA of 17, 30, 37, 51, 65,
                     83,147,196,175,230 K interpolated between 35,
                     75,110,145,185,230,345,409,675,867 GHz, 
                     for EVLA of 500, 70,  60,  55,  100, 130, 350 K
                     interpolated between
                     0.33,1.47,4.89,8.44,22.5,33.5,43.3 GHz, 
                     for SMA of 67,  116, 134, 500 K interpolated
                     between 212.,310.,383.,660. GHz.

                     Note: These are only approximate numbers and do
                     not take into account performance at edges of
                     receiver bands, neither are they guaranteed to
                     reflect the most recent measurements.  Caveat
                     emptor. Use the sm tool to add noise if you want
                     more precise control, and use the ALMA exposure
                     time calculator for sensitivity numbers in
                     proposals.
</description>
      <value type="string">tsys-atm</value>
      <allowed kind="enum">
  <value type="string"></value>
  <value type="string">tsys-atm</value>
  <value type="string">tsys-manual</value>
      </allowed>
    </param>    
    <param type="double" name="user_pwv" subparam="true">
<shortdescription>Precipitable Water Vapor in mm</shortdescription>
<description>Precipitable water vapor if constructing an atmospheric
model (in mm)
                      Subparameter of thermalnoise='tsys-atm'
</description>
      <value>0.5</value>
      <allowed kind="range"><value range="min">0</value></allowed>
    </param>

    <param type="double" name="t_ground" subparam="true">
<shortdescription>Ground/spillover ambient temperature in K</shortdescription>
<description>Ground/spillover temperature in K
                      Subparameter of
                      thermalnoise='tsys-atm|tsys-manual'
</description><value>270.</value>


      <allowed kind="range"><value range="min">0</value></allowed>
    </param>

    <param type="double" name="t_sky" subparam="true">
<shortdescription>Atmospheric temperatur in K</shortdescription>
<description>Atmospheric temperature in K
                      Subparameter of thermalnoise='tsys-manual'
</description>
       <value>260.</value>
      <allowed kind="range"><value range="min">0</value></allowed>
    </param>

    <param type="double" name="tau0" subparam="true">
<shortdescription>Zenith opacity</shortdescription>
<description>Zenith opacity at observing frequency
                      Subparameter of thermalnoise='tsys-manual'

                      https://casaguides.nrao.edu/index.php/Corrupt
                      for more information on noise, in particular how
                      to add a phase screen using the toolkit
</description><value>0.1</value>
      <allowed kind="range"><value range="min">0</value></allowed>
    </param>

    <param type="int" name="seed" subparam="true">
<shortdescription>Random number seed</shortdescription>
<description>Random number seed
                      Subparameter of
                      thermalnoise='tsys-atm|tsys-manual'
</description><value>11111</value>
    </param>
    
    <param type="double" name="leakage">
<shortdescription>Cross polarization (interferometer only)</shortdescription>
<description>add cross polarization corruption of this fractional
magnitude (interferometer only)
</description>
      <value>0.0</value>
      <allowed kind="range"><value range="min">0</value></allowed>
    </param>    

    




    <param type="string" name="graphics">
<shortdescription>Display graphics at each stage to [screen|file|both|none]</shortdescription>
<description>View plots on the screen, saved to file, both, or neither
                     Options: screen|file|both|none
</description>
      <value type="string">both</value>
      <allowed kind="enum">
  <value>screen</value>
  <value>file</value>
  <value>both</value>
  <value>none</value>
  <value></value>
      </allowed>
    </param>

    <param type="bool" name="verbose">
<shortdescription>Print extra information to the logger and terminal</shortdescription>
<description>Print extra information to the logger and terminal
                     Default: False
                     Options: True|False
</description>
      <value>False</value>
    </param>

    <param type="bool" name="overwrite">
<shortdescription>Overwrite existing files in the project subdirectory</shortdescription>
<description>Overwrite files starting with $project
                     Default: False
                     Options: True|False
</description>
      <value>True</value>
    </param>



        
    
<!--  CONSTRAINTS  -->    
    
    <constraints>
      <when param="skymodel">
  <notequals value="">
    <default param="inbright"><value type="string"></value></default>
    <default param="indirection">
      <value type="string"></value>
    </default>
    <default param="incell"><value type="string"></value></default>
    <default param="incenter">
      <description>set central frequency (required even for 2D image)</description>
      <value type="string"></value>
    </default>
    <default param="inwidth">
      <description>set channel width or bandwidth of 2D / continuum image</description>
      <value type="string"></value>
    </default>
  </notequals>
      </when>
      <!-- **********************************************************  -->
      <when param="complist">
  <notequals value="">
    <default param="compwidth"><value type="string">8GHz</value></default>
    <default param="comp_nchan"><value type="int">1</value></default>
  </notequals>
      </when>
      <!-- **********************************************************  -->
      <when param="setpointings">
  <equals type="bool" value="True">    
    <default param="integration"><value type="string">10s</value></default>
    <default param="direction">
      <description>center of map or "" to center on the model</description>
      <value type="string"></value>
    </default>
    <default param="mapsize" type="stringArray">
      <value type="vector">
        <value type="string">''</value>
        <value type="string">''</value>
      </value>
    </default>
    <default param="maptype" type="string">
      <value type="string">ALMA</value>
    </default>
    <default param="pointingspacing"><value type="string"></value></default>
  </equals>
  <equals type="bool" value="False">
    <default param="ptgfile"><value type="string">$project.ptg.txt</value></default>
    <default param="integration"><value type="string">10s</value>
    <description>integration time (see below)</description></default>
  </equals>
      </when>
      <!-- **********************************************************  -->
      <when param="obsmode">
  <equals type="string" value="int">
    <default param="antennalist"><value type="string">alma.out10.cfg</value></default>
    <default param="refdate"><value type="string">2014/05/21</value></default>
    <default param="hourangle"><value type="string">transit</value></default>
    <default param="totaltime"><value>"7200s"</value></default>
    <default param="caldirection"><value type="string"></value></default>
    <default param="calflux"><value type="string">1Jy</value></default>
  </equals>
  <equals type="string" value="sd">
    <default param="sdantlist"><value type="string">aca.tp.cfg</value></default>
    <default param="sdant"><value type="int">0</value></default>
    <default param="refdate"><value type="string">2014/05/21</value></default>
    <default param="hourangle"><value type="string">transit</value></default>
    <default param="totaltime"><value>"7200s"</value></default>
  </equals>
  <equals type="string" value="">
    <default param="antennalist"><value type="string"></value>
    <description>antenna info can be used to calculate the primary beam</description></default>
    <default param="sdantlist"><value type="string"></value>
    <description>antenna info can be used to calculate the primary beam</description></default>
    <default param="sdant"><value type="int">0</value></default>
  </equals>
      </when>
      <!-- **********************************************************  -->
      <when param="thermalnoise">
  <equals type="string" value="tsys-atm">
    <default param="user_pwv"><value>0.5</value></default>
    <default param="t_ground"><value>269.</value></default>
    <default param="seed"><value>11111</value></default>
  </equals>
  <equals type="string" value=""/>
  <equals type="string" value="False"/>
  <equals type="string" value="F"/>
  <equals type="string" value="tsys-manual">
    <default param="t_ground"><value>269.</value></default>
    <default param="t_sky"><value>263.</value></default>
    <default param="tau0"><value>0.1</value></default>
    <default param="seed"><value>11111</value></default>
  </equals>
  <equals type="string" value=""/>
  <equals type="string" value="False"/>
  <equals type="string" value="F"/>
      </when>
      <!-- **********************************************************  -->
    </constraints>
    
    
    
  </input>
  <returns type="bool"/>
  
<example>

For more information, see the task pages of simobserve in CASA Docs:

https://casa.nrao.edu/casadocs/

</example></task>
</casaxml>
