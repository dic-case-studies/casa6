<casaxml xsi:schemaLocation="http://casa.nrao.edu/schema/casa.xsd file:///opt/casa/code/tools/xml/casa.xsd" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://casa.nrao.edu/schema/psetTypes.html">


        <tool module="synthesismaskhandler" name="synthesismaskhandler">
        <shortdescription>tool for mask handling in sysnthesis imaging </shortdescription>
       
<description>
synthesismaskhandler is a tool to manupilate mask image used in imager 
</description>

<code>
	<include>synthesismaskhandler_forward.h</include>
<private>
	<include>synthesismaskhandler_private.h</include>
</private>

</code>



 
   <method name="synthesismaskhandler" type="constructor">
   <shortdescription>Construct an synthesismaskhandler tool</shortdescription>
   
<description>
This is used to construct {\tt synthesismaskhandler} tool. 

</description>
<input>

</input>
<returns type="synthesismaskhandler"/>
<example>
# create a synthesismaskhandler tool
maskhandler=casac.synthesismaskhandler()

nchan=5 # input mask is a cube of 5 channel

#define channel flag: 1 to skip the channel for pruning
chanflag = np.zeros(nchan)  # prune every channel

maskhandler.pruneregions('testMask.image',2.0, chanflag)

# output python dictionary contains the number of origin regions
and the number of regions removed at each channel, and prunesize used.
For skipped channels, N_reg and N_reg_pruned elements will be -1.

{'N_reg': array([5, 0, 0, 1, 1], dtype=uint32),
 'N_reg_pruned': array([4, 0, 0, 1, 1], dtype=uint32),
 'prunesize': 2.0}

# the resultant pruned mask is create as  testMask.image.pruned
maskhandler.done() # to close the synthesismaskhandler tool
</example>
</method>



   <method name="pruneregions" type="function">
   <shortdescription>prune mask regions</shortdescription>

<description>
</description>
<input>
     <param name="inmaskname" type="string">
     <description>input mask image name </description>
     <value type="string"/>
     </param>

     <param name="prunesize" type="double">
     <description>size in pixels to apply pruning </description>
     <value type="double">0.0</value>
     </param>

     <param name="chanflag" type="boolVec">
     <description>list of channel flags</description>
     <value type="boolVec"/>
     </param>

     <param name="outmaskname" type="string">
     <description>optional pruned mask name. If unspecified, use the default name:  inmaskname.pruned </description>
     <value type="string"/>
     </param>

</input>
<returns type="record"/>
</method>


   <method name="done" type="function">
   <shortdescription>close maskhandler tool</shortdescription>
<description>
</description>
<input>

</input>
<returns type="bool"/>
</method>

</tool>

</casaxml>
