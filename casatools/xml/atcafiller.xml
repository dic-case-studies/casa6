<casaxml xsi:schemaLocation="http://casa.nrao.edu/schema/casa.xsd file:///opt/casa/code/tools/xml/casa.xsd" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://casa.nrao.edu/schema/psetTypes.html">


   <tool module="atnf" name="atcafiller">
   <shortdescription>Filler for ATNF/ATCA RPFITS data</shortdescription>


<code>
	<include>atcafiller_forward.h</include>
<private>
	<include>atcafiller_private.h</include>
</private>
</code>
 
   <method name="atcafiller" type="constructor">
   <shortdescription>Construct an atcafiller tool</shortdescription>
   
<description>
This is used to construct an {\tt atcafiller} tool for filling ATCA RPFITS data into a MeasurementSet
</description>
<input>
</input>
<returns type="atcafiller"/>
<example>
#Tool construction is done this way:

af = casac.atcafiller()

</example>
</method>

<method name="open" type="function">
<shortdescription>Specify the names of the data files and MeasurementSet
</shortdescription>
<input>
     <param name="msname" direction="in" type="string">
     <description>Filename for MeasurementSet to create
       </description>
     <value/>
     </param>

    <param name="filenames" direction="in" type="stringVec">
     <description>Existing RPFITS files to read; wild cards accepted,
          don't use commas
       </description>
     <value/>
     </param>

    <param name="options" direction="in" type="stringVec">
     <description>Processing options: birdie, rfiflag, noxycorr, compress,
          fastmosaic, hires, reweight, noac
       </description>
     <value/>
     </param>
   
</input>
<returns type="bool"/>
<example>
#Specify that we want to load the data from files 1999-01-01\_0101.C999 and 
#1999-01-01\_0202.C999 in the directory /data/RPFITS into the MeasurementSet 
#myms.
atf = atcafiller()
atf.open('myms',
  &quot;/data/RPFITS/1999-01-01_0101.C999 /data/RPFITS/1999-01-01_0202.C999&quot;,
  &quot;birdie reweight&quot;)
atf.fill()
del atf
myms:=ms('myms')
myms.nrow()
#1204
myms.close()
</example>
<description>
This function does the actual filling of the data from rpfits format
files to a MeasurementSet. After the completion of the fill operation
you should call the done method to avoid problems with incomplete
flushing of the data to disk. You may want to run select before fill, to 
reduce the amount of data you read in.

In the filenames argument commas are not allowed because of the 
 wildcard capability.

The options argument allows for special processing options during the
filling process.

    * birdie: remove self generated birdies in 128 MHz
  data by deleting every other channel and the edge
  channels
    * reweight: suppress ringing of interference spikes by
  reweighting the lag spectrum for minimum spectral sidelobe response
    * noxycorr: do not apply the xyphase
  correction using the noise cal xy phase measurements (use if you
  know there was a problem with the measurements)
    * compress: Compress the data, model, corrected data and imaging weight
 columns (may reduce dynamic range)
    * fastmosaic: Produce a MeasurementSet with small tiles to optimize I/O
for observations with a large number of pointings and a short time (a few
integrations) on each pointing. Failing to use this options for such data
may cause very inefficient access, especially for continuum data 
(10-100 times slower)
    * hires: For data taken in binning mode: set the TIME_CENTROID column to
the center of each bin (normally center of integration interval). The TIME column is
unaffected. TIME_CENTROID will no longer be in time order for dual frequency
mode.
    * noac : Do not load the autocorrelations

</description>
</method>

<method name="fill" type="function">
<shortdescription>Fill the MeasurementSet
</shortdescription>
<returns type="bool"/>
<example>
#Specify that we want to load the data from files 1999-01-01\_0101.C999 and 
#1999-01-01\_0202.C999 in the directory /data/RPFITS into the MeasurementSet #myms.
atf = atcafiller()
atf.open('myms',
  &quot;/data/RPFITS/1999-01-01_0101.C999 /data/RPFITS/1999-01-01_0202.C999&quot;,
  &quot;birdie reweight&quot;)
atf.fill()
del atf
myms:=ms('myms')
myms.nrow()
#1204
myms.close()
</example>

<description>
This function does the actual filling of the data from rpfits format
files to a MeasurementSet. You may want to run select before fill, to 
reduce the amount of data you read in.

</description>
</method>

<method name="select" type="function">
<shortdescription>Select the data to fill</shortdescription>
<input>
  <param name="firstscan" direction="in" type="int">
  <description> First scan to read</description>
  <value>0</value>
  </param>
  <param name="lastscan" direction="in" type="int">
  <description> Last scan to read</description>
  <value>9999</value>
  </param>
  <param name="spw" direction="in" type="intVec">
  <description> Select one or more spectralwindows , -1=all
  </description>
  <value><value>-1</value></value>
  </param>
  <param units="GHz" name="lowfreq" direction="in" type="double">
  <description> Lowest reference frequency to select</description>
  <value>0.1</value>
  </param>
  <param units="GHz" name="highfreq" direction="in" type="double">
  <description> Highest reference frequency to select</description>
  <value>999.0</value>
  </param>
  <param name="fields" direction="in" type="stringVec">
  <description> List of field names (sources) to select
  </description>
  <value/>
  </param>
  <param name="edge" direction="in" type="float">
  <description>Percentage of edge channels to flag
  </description>
  <value>8.0</value>
  </param>
</input>
<description>

Select on various items, to load only a subset of the data present in
the input file. The default is to load everything.
Note that the frequency selection using lowfreq and highfreq acts purely on 
center (reference) frequencies, channel selection is not available at this stage.
Use freqchain to select the frequency chain (or IF) to load, 
specify either 1 or 2, the default of zero will load both. 
Use the fields parameter to specify a list of field names (sources) you 
want to load.
For detailed selection of complex observations the last two parameters let
you specify the required bandwidth (in whole MHz) and number of channels
of the first frequency chain.
</description>
<returns type="bool"/>
<example>
#Select scans 4 to 10 inclusive, frequency chain 1, all data with a
#reference frequency of more than 1.4 GHz.
atf = atcafiller()
atf.open('myms', '/data/RPFITS/1999-01-01_0101.C999')
atf.select(firstscan=4, lastscan=10, freqchain=1, lowfreq=1.4,edge=10)
atf.fill()
del atf
</example>
</method>
<method name="opacities" type="function">
<shortdescription>Calculate opacity correction
</shortdescription>
<input>
  <param name="fghz" direction="in" type="doubleVec">
  <description>array of frequencies</description>
  <value/>
  </param>
  <param name="tempk" direction="in" type="float">
  <description>surface temperature in K</description>
  <value>300.0</value>
  </param>
  <param name="humi" direction="in" type="float">
  <description>humidity in %</description>
  <value>50.0</value>
  </param>
  <param name="press" direction="in" type="float">
  <description>surface pressure in hPa</description>
  <value>1010.0</value>
  </param>
  <param name="height" direction="in" type="float">
  <description>observatory height in m</description>
  <value>200.0</value>
  </param>
</input>
<returns type="doubleVec">Returns opacities at given frequencies</returns>
<example>
#
atf = atcafiller()
opac=atf.opacities([22.0,23.0],300.,50.,1013.,200.)
print opac
del atf
</example>

<description>
This function does the actual filling of the data from rpfits format
files to a MeasurementSet. You may want to run select before fill, to 
reduce the amount of data you read in.

</description>
</method>

</tool>
</casaxml>
