<casaxml xsi:schemaLocation="http://casa.nrao.edu/schema/casa.xsd file:///opt/casa/code/tools/xml/casa.xsd" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://casa.nrao.edu/schema/psetTypes.html">

 
        <tool module="images" name="imagemetadata">
        <shortdescription>Operations on imagemetadata</shortdescription>
       

<code>
	<include>imagemetadata_forward.h</include>
	<private>
		<include>imagemetadata_private.h</include> </private>
</code>


<description>
\medskip
\noindent{\bf Summary}

An imagemetadata tool provides access to \casa\ image metadata.
\bigskip
{\bf Overview of imagemetadata \tool\ functionality}

\begin{itemize}

\item {\bf List - } List image metadata.

\begin{itemize}

\item <link anchor="images:imagemetadata.list.function">list</link> - List image metadata.


\end{itemize}



\medskip
\noindent{\bf General}

An imagemetadata tool provides access to an image's metadata. This tool
fully supports float and complex valued images.

<example> 

immd.open(&quot;myim.im&quot;)
metadata = immd.list()
immd.done()

</example>

</description>

   <method name="imagemetadata" type="constructor">
     <shortdescription/>
     <description/>
     <input/>
     <example/>
   </method>

<method name="add" type="function">
    <shortdescription>Add a key-value pair if possible.</shortdescription>
    <input>
        <param name="key" type="string">
            <description>The name of the FITS or other keyword.</description>
            <value/>
        </param>
        <param name="value" type="any">
            <any type="variant"/>
            <description>Associated value to add.</description>
            <value/>
        </param>
    </input>
    <returns type="bool"/>
    <description>
        Add a key-value pair if possible.
    </description>
    <example>
imd.open(&quot;myim.im&quot;)
# add a keyword &quot;test&quot; with value &quot;first&quot;
if add(&quot;test&quot;, &quot;first&quot;):
    print &quot;test=first has been added&quot;
else:
    print &quot;Unable to add key test&quot;
imd.done()
    </example>
</method>
<method name="close" type="function">
    <shortdescription>Close the image metadata tool. Synonym for done().</shortdescription>
   
    <returns type="bool"/>
    <description>

This function closes the image metadata tool.  This means that it detaches the
tool from its underlying metadata object. Methods cannot be run on it until it
is opened with another or the same image.

</description>
<example>

imd.open(&quot;myim.im&quot;)
# do stuff
imd.close()

</example>
</method>

<method name="done" type="function">
    <shortdescription>Close the image metadata tool. Synonym for close().</shortdescription>
   
    <returns type="bool"/>
    <description>

This function closes the image metadata tool.  This means that it detaches the
tool from its underlying metadata object. Methods cannot be run on it until it
is opened with another or the same image.

    </description>
    <example>

imd.open(&quot;myim.im&quot;)
# do stuff
imd.done()

    </example>
</method>

<method name="get" type="function">
    <shortdescription>Get the value associated with the specified, case-insensitive FITS keyword.</shortdescription>
    <input>
        <param name="key" type="string">
            <description>The name of the FITS or other keyword.</description>
            <value/>
        </param>
    </input>
    <returns type="variant"/>
    <description>
        Get the value associated with the specified, case-insensitive FITS keyword.
    </description>
    <example>
imd.open(&quot;myim.im&quot;)
imtype = imd.get('imtype')
imd.done()
    </example>
</method>

<method name="list" type="function">
    <shortdescription>Get a dictionary of FITS-like header items.</shortdescription>
    <input>
        <param name="verbose" type="bool">
            <description>If true, print listing to logger</description>
            <value>true</value>
        </param>
    </input>
    <returns type="record"/>
    <description>
        Get a listing of traditional FITS-like &quot;header&quot; items.
    </description>
    <example>
imd.open(&quot;myim.im&quot;)
mylist = imd.list(False)
imd.done()
crval1 = mylist{&quot;crval1&quot;}
    </example>
</method>


<method name="open" type="function">
    <shortdescription>Open this image metadata tool providing access to an image's metadata.</shortdescription>
    <input>
        <param mustexist="True" name="infile" type="path">
            <description>Image name. The image can be in any \casa\ supported format.</description>
        </param>
    </input>
    <returns type="bool">T or fail</returns>
    <description>

This method creates access to the specified image's metadata.

    </description>

    <example>

immd.open(&quot;myim.im&quot;)
# do stuff with the tool and then close it.
immd.done()

    </example>
</method>

<method name="remove" type="function">
    <shortdescription>Remove or clear the value of a keyword if possible.</shortdescription>
    <input>
        <param name="key" type="string">
            <description>The name of the FITS or other keyword.</description>
            <value/>
        </param>
        <param name="value" type="any">
            <any type="variant"/>
            <description>Value to remove if the key is multi-valued. Only used in the case of key=&quot;masks&quot;.</description>
            <value/>
        </param>
    </input>
    <returns type="bool"/>
    <description>
        Remove or clear the value of a keyword if possible. If key=&quot;masks&quot;, a value specifying the mask
        to remove may be specified. If no value is specified, all masks are removed.
    </description>
    <example>
imd.open(&quot;myim.im&quot;)
# clear the brightness unit
if imd.remove(&quot;bunit&quot;):
    print &quot;bunit has been cleared&quot;
else:
    print &quot;Unable to clear bunit&quot;
imd.done()
    </example>
</method>

<method name="set" type="function">
    <shortdescription>Set a keyword to the specified value if possible.</shortdescription>
    <input>
        <param name="key" type="string">
            <description>The name of the FITS or other keyword.</description>
            <value/>
        </param>
        <param name="value" type="any">
            <any type="variant"/>
            <description>Associated value to set.</description>
            <value/>
        </param>
    </input>
    <returns type="bool"/>
    <description>
        Set a key-value pair if possible.
    </description>
    <example>
    
    Note that when setting the reference value of a polarizaiton axis, one must
    provide an array of stokes/polarization strings ([&quot;I&quot;, &quot;Q&quot;, &quot;XX&quot;]) that is the
    same length as the stokes axis. If the stokes axis is degenerate, one can alternatively
    provide a string indicating the stokes value.
    
imd.open(&quot;myim.im&quot;)
# Set keyword &quot;telescope&quot; with value &quot;Argus Array&quot;
if imd.set(&quot;telescope&quot;, &quot;Argus Array&quot;):
    print &quot;telescope has been updated&quot;
else:
    print &quot;Unable to update telescope.&quot;
imd.done()

# set polarizations for an image with three pixels on the stokes axis crval3
imd.open(&quot;myim.im&quot;)
if imd.set(&quot;crval3&quot;, [XY, LL, &quot;Q&quot;]):
    print &quot;polarization values have been updated&quot;
else:
    print &quot;Unable to update polarization values.&quot;
imd.done()

    </example>
</method>

</tool>
</casaxml>
