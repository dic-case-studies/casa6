<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" ?>
<casaxml xmlns="http://casa.nrao.edu/schema/psetTypes.html"
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
xsi:schemaLocation="http://casa.nrao.edu/schema/casa.xsd
file:///opt/casa/code/tools/xml/casa.xsd">
 
        <tool name="vpmanager" module="imager">


<code>
        <include>tools/synthesis/vpmanager_forward.h</include>
<private>
	<include>tools/synthesis/vpmanager_private.h</include>
</private>

</code>

        <shortdescription>Tool for specifying voltage patterns and primary beams</shortdescription>
       

<description>
The vpmanager tool serves to set up a list of primary beams or voltage patterns
(antenna responses) and then select in detail 
which of them is used for which observatory.
The distinction of several antenna types for a given observatory (heterogeneous
arrays) is supported.
 
Antenna responses can be selected from either internally 
hard-coded ones, or response-groups defined via an AntennaResponses table, or
user-defined analytic primary beams.

Imaging and simulation routines pick up the selected response definitions
and instantiate them.

The vpmanager can also create a table with the
description of one or more voltage patterns (vp) or primary beams
(pb).  There is a mapping between telescope name and the vp or pb
description.  The vp description table can be read by imager's
<link anchor="imager:imager.setvp.function">setvp</link> method, which instantiates the
corresponding voltage patterns from the descriptions and applies them
to the images. 

The vpmanager tool is the CASA Python object which constitutes the
user interface to the VPManager C++ class. By default it is named "vp" in casapy.

The VPManager class is implemented as a singleton, i.e. internally there is only one instance
at all times. This instance accessed via the static VPManager::Instance() method. It is permanent 
until casapy is exited and can be reinitialised via the  VPManager::reset() method.

The vp tool connects to the single instance of VPManager.
All settings the user makes with the tool, have effect immediately and are then used
by all parts of CASA which access the VPManager class (i.e. eventually all imaging and simulation
routines).

The VPManager instance keeps a simple database of available antenna responses, the {\it vplist}.
This list is initialized at the startup of CASA or by calling the reset() method
of the class. In the vp tool, the reset call can be triggered using
\begin{verbatim}
   vp.reset()
\end{verbatim}

In order to support heterogeneous interferometer arrays, VPManager permits the use
of {\it antenna types} in addition to observatory or {\it telescope} names.

For defining a simple response which is only spatially scaled by frequency but otherwise
constant, a simple call to the vp tool is sufficient, e.g.:
\begin{verbatim}
        vp.setpbairy(telescope='ALMA',
                     dishdiam='12.0m',
                     blockagediam='0.75m',
                     maxrad='1.784deg',
                     reffreq='1.0GHz',
                     dopb=True)
\end{verbatim}
This will create a new entry in the vplist for an analytic Airy disk antenna response
and make it the default response for telescope "ALMA".
Subsequent requests to VPManager for a ALMA antenna response will get this Airy disk.

If whole {\it response systems} are to be defined for a given telescope, the use of an
{\it AntennaResponses table} is possible. Such a table can be set up using the 
vp tool method
{\tt createantresp()} 
and then connected to a telescope using a command like
\begin{verbatim}
vp.setpbantresptable(telescope='ALMA',
                     antresppath='alma/responses/AntennaResponses-ALMA-RT',
                     dopb=True)
\end{verbatim}
where the value of the {\tt antresppath} parameter indicates the path to the AntennaResponses table.
Subsequent requests for ALMA antenna responses to VPManager will start a search in the 
indicated AntennaResponses table for responses matching given parameters.
Presently supported search parameters in VPManager::getvp() and vp.getvp() are:
\begin{itemize}
\item antenna type
\item observation time (used for versioning and for reference frame transformations)
\item frequency (as a Measure, the reference frame is respected)
\item observing direction (to support elevation and azimuth dependent responses)
\end{itemize}
An example of a call to vp.getvp() is
\begin{verbatim}
        myrecord = vp.getvp(telescope='ALMA',
                            antennatype = 'DV',
                            obstime = '2009/07/24/10:00:00',
                            freq = 'TOPO 100GHz',
                            obsdirection = 'AZEL 30deg 60deg')
\end{verbatim}

If the default antenna response for the given telescope is not defined via an AntennaResponses
table, the observation parameters {\tt obstime}, {\tt freq}, and {\tt obsdirection} are not needed 
and can be omitted. The parameter {\tt antennatype} defaults to empty string. So if no antenna types
are distinguished for the given telescope, the simplest call to getvp becomes
\begin{verbatim}
       myrecord = vp.getvp(telescope='HATCREEK')
\end{verbatim}

During initialization, VPManager will look for entries in the column "AntennaResponses"
of the CASA "Observatories" table. If there are non-blank entries, the string found will be
interpreted as the path to the default AntennaResponses table for the given telescope. 

Note that the casacore AntennaResponses C++ class (which is used by VPManager to
administrate the AntennaResponses tables) also supports the additional search parameters
"receiver type" and "beam number". A general interface to the response file name search
is available through the vp.getrespimagename() method. But presently this accesses only
AntennaResponse tables which are entered as the default table in the Observatories table.

Generally, the vp tool methods provide functionality:
to set up new analytic antenna responses,
select which antenna responses from the vplist to use for which telescope and antenna type, 
access the contents of the vplist,
create and access an AntennaResponses table,
create a voltage pattern table.

</description>

<example>
Define Airy beams for ALMA antenna types

        vp.reset()
        vp.setpbairy(telescope='ALMA',
                     dishdiam='11m',
                     blockagediam='0.75m',
                     maxrad='1.784deg',
                     reffreq='1.0GHz',
                     dopb=True)
        myid1 = vp.getuserdefault('ALMA')
        
        vp.setpbairy(telescope='ALMA',
                     dishdiam='6m',
                     blockagediam='0.75m',
                     maxrad='3.5deg',
                     reffreq='1.0GHz',
                     dopb=True)
        myid2 = vp.getuserdefault('ALMA')

        vp.setuserdefault(myid1, 'ALMA', 'DV')
        vp.setuserdefault(myid1, 'ALMA', 'DA')
        vp.setuserdefault(myid1, 'ALMA', 'PM')
        vp.setuserdefault(myid2, 'ALMA', 'CM')

This will define Airy disk primary beams for all four antenna types
available in the Atacama Large MM/sub-mm Array. 
</example>


 
   <method type="constructor" name="vpmanager">
   <shortdescription>Construct a vpmanager tool (note: the underlying VPManager is a singleton)</shortdescription>
   
<description>
The vpmanager constructor has no arguments.
</description>
</method>
 
   <method type="function" name="saveastable">
   <shortdescription>Save the vp or pb descriptions as a table</shortdescription>
   
<description>
Save the vp or pb descriptions as a table.  Each description is in a different
row of the table.
</description>
<input>

     <param type="string" name="tablename">
     <description>Name of table to save vp descriptions in</description>
     <value></value>
     </param>
</input>
<returns type="bool"></returns>
</method>

   <method type="function" name="loadfromtable">
   <shortdescription>Load the vp or pb descriptions from a table (deleting all previous definitions)</shortdescription>
   
<description>
Load the vp or pb descriptions from a table created, e.g., with saveastable().
</description>
<input>

     <param type="string" name="tablename">
     <description>Name of table to load vp descriptions from</description>
     <value></value>
     </param>
</input>
<returns type="bool"></returns>
</method>

 
   <method type="function" name="summarizevps">
   <shortdescription>Summarize the currently accumulated VP descriptions</shortdescription>
   
<description>
Summarize the currently accumulated VP descriptions to the logger.
</description>
<input>

     <param type="bool" name="verbose">
     <description>Print out full record?  Otherwise, print summary.</description>
     <value>false</value>
     </param>
</input>
<returns type="bool"></returns>
</method>

 
   <method type="function" name="setcannedpb">
   <shortdescription>Select a vp/pb from our library of common pb models</shortdescription>
   
<description>
We have many vp/pb models ready to go for a variety of telescopes.  If 'DEFAULT' isselected, the system default for that telescope and frequency is used.
</description>
<input>

     <param type="string" name="telescope">
     <description>Which telescope in the MS will use this vp/pb?</description>
     <value>VLA</value>
     </param>

     <param type="string" name="othertelescope">
     <description>If telescope=="OTHER", specify name here</description>
     <value></value>
     </param>

     <param type="bool" name="dopb">
     <description>Should we apply the vp/pb to this telescope's data?</description>
     <value>true</value>
     </param>

     <param type="string" name="commonpb">
     <description>List of common vp/pb models: DEFAULT code figures it out</description>
     <value>DEFAULT</value>
     </param>

     <param type="bool" name="dosquint">
     <description>Enable the natural beam squint found in the common vp model</description>
     <value>false</value>
     </param>

     <param type="any" name="paincrement">
     <description>Increment in Parallactic Angle for asymmetric (ie, squinted) vp application</description>
     <any type="variant"/>
     <value>720deg</value>
     </param>

     <param type="bool" name="usesymmetricbeam">
     <description>Not currently used</description>
     <value>false</value>
     </param>
</input>
<returns type="record">itemcontainer</returns>
</method>

 
   <method type="function" name="setpbairy">
   <shortdescription>Make an airy disk vp</shortdescription>
   
<description>
Information sufficient to create a portion of the Airy disk voltage pattern.
The Airy disk pattern is formed by Fourier transforming a uniformly illuminated
aperture and is given by
\begin{equation}
vp_p(i) = ( areaRatio * 2.0 * j_{1}(x)/x 
                  - 2.0 * j_{1}(x*lengthRatio)/(x*lengthRatio) )/ areaNorm,
\end{equation}
where areaRatio is the dish area divided by the blockage area, lengthRatio
is the dish diameter divided by the blockage diameter, and 
\begin{equation}
x = \frac{i * maxrad * 7.016 * dishdiam/24.5m}{N_{samples} * 1.566 * 60}.
\end{equation}
</description>
<input>

     <param type="string" name="telescope">
     <description>Which telescope in the MS will use this vp/pb?</description>
     <value>VLA</value>
     </param>

     <param type="string" name="othertelescope">
     <description>If telescope=="OTHER", specify name here</description>
     <value></value>
     </param>

     <param type="bool" name="dopb">
     <description>Should we apply the vp/pb to this telescope's data?</description>
     <value>true</value>
     </param>

     <param type="any" name="dishdiam">
     <description>Effective diameter of dish</description>
     <any type="variant"/>
     <value>25.0m</value>
     </param>

     <param type="any" name="blockagediam">
     <description>Effective diameter of subreflector blockage</description>
     <any type="variant"/>
     <value>2.5m</value>
     </param>

     <param type="any" name="maxrad">
     <description>Maximum radial extent of the vp/pb (scales with 1/freq)</description>
     <any type="variant"/>
     <value>0.8deg</value>
     </param>

     <param type="any" name="reffreq">
     <description>Frequency at which maxrad is specified</description>
     <any type="variant"/>
     <value>1.0GHz</value>
     </param>

     <param type="any" name="squintdir">
     <any type="variant"/>
     <description>Offset (Measure) of RR beam from pointing center, azel frame (scales with 1/freq)</description>
     <value></value>
     </param>

     <param type="any" name="squintreffreq">
     <description>Frequency at which the squint is specified</description>
     <any type="variant"/>
     <value>1.0GHz</value>
     </param>

     <param type="bool" name="dosquint">
     <description>Enable the natural beam squint found in the common vp model</description>
     <value>false</value>
     </param>

     <param type="any" name="paincrement">
     <description>Increment in Parallactic Angle for asymmetric (ie, squinted) vp application</description>
     <any type="variant"/>
     <value>720deg</value>
     </param>

     <param type="bool" name="usesymmetricbeam">
     <description>Not currently used</description>
     <value>false</value>
     </param>
</input>
<returns type="record">itemcontainer</returns>
</method>

 
   <method type="function" name="setpbcospoly">
   <shortdescription>Make a vp/pb from a polynomial of scaled cosines</shortdescription>
   
<description>
A voltage pattern or primary beam of the form
\begin{equation}
VP(x) = \sum_{i} ( coeff_{i} \cos^{2i}( scale_{i} x).
\end{equation}
This is a generalization of the WSRT primary beam model.
</description>
<input>

     <param type="string" name="telescope">
     <description>Which telescope in the MS will use this vp/pb?</description>
     <value>VLA</value>
     </param>

     <param type="string" name="othertelescope">
     <description>If telescope=="OTHER", specify name here</description>
     <value></value>
     </param>

     <param type="bool" name="dopb">
     <description>Should we apply the vp/pb to this telescope's data?</description>
     <value>true</value>
     </param>

     <param type="doubleArray" name="coeff">
     <description>Vector of coefficients of cosines</description>
     <value>-1</value>
     </param>

     <param type="doubleArray" name="scale">
     <description>Vector of scale factors of cosines</description>
     <value>-1</value>
     </param>

     <param type="any" name="maxrad">
     <description>Maximum radial extent of the vp/pb (scales with 1/freq)</description>
     <any type="variant"/>
     <value>0.8deg</value>
     </param>

     <param type="any" name="reffreq">
     <description>Frequency at which maxrad is specified</description>
     <any type="variant"/>
     <value>1.0GHz</value>
     </param>

     <param type="string" name="isthispb">
     <description>Do these parameters describe a PB or a VP?</description>
     <value>PB</value>
     </param>

     <param type="any" name="squintdir">
     <any type="variant"/>
     <description>Offset (Measure) of RR beam from pointing center, azel frame (scales with 1/freq)</description>
     <value></value>
     </param>

     <param type="any" name="squintreffreq">
     <description>Frequency at which the squint is specified</description>
     <any type="variant"/>
     <value>1.0GHz</value>
     </param>

     <param type="bool" name="dosquint">
     <description>Enable the natural beam squint found in the common vp model</description>
     <value>false</value>
     </param>

     <param type="any" name="paincrement">
     <description>Increment in Parallactic Angle for asymmetric (ie, squinted) vp application</description>
     <any type="variant"/>
     <value>720deg</value>
     </param>

     <param type="bool" name="usesymmetricbeam">
     <description>Not currently used</description>
     <value>false</value>
     </param>
</input>
<returns type="record">itemcontainer</returns>
</method>

 
   <method type="function" name="setpbgauss">
   <shortdescription>Make a Gaussian vp/pb</shortdescription>
   
<description>
Make a Gaussian primary beam given by
\begin{equation}
PB(x) =  e^{- (x/(halfwidth*\sqrt{1/\log(2)})) }.
\end{equation}
</description>
<input>

     <param type="string" name="telescope">
     <description>Which telescope in the MS will use this vp/pb?</description>
     <value>VLA</value>
     </param>

     <param type="string" name="othertelescope">
     <description>If telescope=="OTHER", specify name here</description>
     <value></value>
     </param>

     <param type="bool" name="dopb">
     <description>Should we apply the vp/pb to this telescope's data?</description>
     <value>true</value>
     </param>

     <param type="any" name="halfwidth">
     <description>Half power half width of the Gaussian at the reffreq</description>
     <any type="variant"/>
     <value>0.5deg</value>
     </param>

     <param type="any" name="maxrad">
     <description>Maximum radial extent of the vp/pb (scales with 1/freq)</description>
     <any type="variant"/>
     <value>1.0deg</value>
     </param>

     <param type="any" name="reffreq">
     <description>Frequency at which maxrad is specified</description>
     <any type="variant"/>
     <value>1.0GHz</value>
     </param>

     <param type="string" name="isthispb">
     <description>Do these parameters describe a PB or a VP?</description>
     <value>PB</value>
     </param>

     <param type="any" name="squintdir">
     <any type="variant"/>
     <description>Offset (Measure) of RR beam from pointing center, azel frame (scales with 1/freq)</description>
     <value></value>
     </param>

     <param type="any" name="squintreffreq">
     <description>Frequency at which the squint is specified</description>
     <any type="variant"/>
     <value>1.0GHz</value>
     </param>

     <param type="bool" name="dosquint">
     <description>Enable the natural beam squint found in the common vp model</description>
     <value>false</value>
     </param>

     <param type="any" name="paincrement">
     <description>Increment in Parallactic Angle for asymmetric (ie, squinted) vp application</description>
     <any type="variant"/>
     <value>720deg</value>
     </param>

     <param type="bool" name="usesymmetricbeam">
     <description>Not currently used</description>
     <value>false</value>
     </param>
</input>
<returns type="record">itemcontainer</returns>
</method>

 
   <method type="function" name="setpbinvpoly">
   <shortdescription>Make a vp/pb as an inverse polynomial</shortdescription>
   
<description>
The inverse polynomial describes the inverse of the VP or PB
as a polynomial of even powers:
\begin{equation}
1/VP(x) = \sum_{i} coeff_{i} * x^{2i}.
\end{equation}
</description>
<input>

     <param type="string" name="telescope">
     <description>Which telescope in the MS will use this vp/pb?</description>
     <value>VLA</value>
     </param>

     <param type="string" name="othertelescope">
     <description>If telescope=="OTHER", specify name here</description>
     <value></value>
     </param>

     <param type="bool" name="dopb">
     <description>Should we apply the vp/pb to this telescope's data?</description>
     <value>true</value>
     </param>

     <param type="doubleArray" name="coeff">
     <description>Coefficients of even powered terms</description>
     <value>-1</value>
     </param>

     <param type="any" name="maxrad">
     <description>Maximum radial extent of the vp/pb (scales with 1/freq)</description>
     <any type="variant"/> 
     <value>0.8deg</value>
     </param>

     <param type="any" name="reffreq">
     <description>Frequency at which maxrad is specified</description>
     <any type="variant"/>
     <value>1.0GHz</value>
     </param>

     <param type="string" name="isthispb">
     <description>Do these parameters describe a PB or a VP?</description>
     <value>PB</value>
     </param>

     <param type="any" name="squintdir">
     <any type="variant"/>
     <description>Offset (Measure) of RR beam from pointing center, azel frame (scales with 1/freq)</description>
     <value></value>
     </param>

     <param type="any" name="squintreffreq">
     <description>Frequency at which the squint is specified</description>
     <any type="variant"/>
     <value>1.0</value>
     </param>

     <param type="bool" name="dosquint">
     <description>Enable the natural beam squint found in the common vp model</description>
     <value>false</value>
     </param>

     <param type="any" name="paincrement">
     <description>Increment in Parallactic Angle for asymmetric (ie, squinted) vp application</description>
     <any type="variant"/>
     <value>720deg</value>
     </param>

     <param type="bool" name="usesymmetricbeam">
     <description>Not currently used</description>
     <value>false</value>
     </param>
</input>
<returns type="record">itemcontainer</returns>
</method>

 
   <method type="function" name="setpbnumeric">
   <shortdescription>Make a vp/pb from a user-supplied vector</shortdescription>
   
<description>
Supply a vector of vp/pb sample values taken on a regular grid between x=0 and
x=maxrad.  We perform sinc interpolation to fill in the lookup table.
</description>
<input>

     <param type="string" name="telescope">
     <description>Which telescope in the MS will use this vp/pb?</description>
     <value>VLA</value>
     </param>

     <param type="string" name="othertelescope">
     <description>If telescope=="OTHER", specify name here</description>
     <value></value>
     </param>

     <param type="bool" name="dopb">
     <description>Should we apply the vp/pb to this telescope's data?</description>
     <value>true</value>
     </param>

     <param type="doubleArray" name="vect">
     <description>Vector of vp/pb samples uniformly spaced from 0 to maxrad</description>
     <value>-1</value>
     </param>

     <param type="any" name="maxrad">
     <description>Maximum radial extent of the vp/pb (scales with 1/freq)</description>
     <any type="variant"/>
     <value>0.8deg</value>
     </param>

     <param type="any" name="reffreq">
     <description>Frequency at which maxrad is specified</description>
     <any type="variant"/>
     <value>1.0GHz</value>
     </param>

     <param type="string" name="isthispb">
     <description>Do these parameters describe a PB or a VP?</description>
     <value>PB</value>
     </param>

     <param type="any" name="squintdir">
     <any type="variant"/>
     <description>Offset (Measure) of RR beam from pointing center, azel frame (scales with 1/freq)</description>
     <value></value>
     </param>

     <param type="any" name="squintreffreq">
     <description>Frequency at which the squint is specified</description>
     <any type="variant"/>
     <value>1.0GHz</value>
     </param>

     <param type="bool" name="dosquint">
     <description>Enable the natural beam squint found in the common vp model</description>
     <value>false</value>
     </param>

     <param type="any" name="paincrement">
     <description>Increment in Parallactic Angle for asymmetric (ie, squinted) vp application</description>
     <any type="variant"/>
     <value>720deg</value>
     </param>

     <param type="bool" name="usesymmetricbeam">
     <description>Not currently used</description>
     <value>false</value>
     </param>
</input>
<returns type="record">>itemcontainer</returns>
</method>

 
   <method type="function" name="setpbimage">
   <shortdescription>Make a vp/pb from a user-supplied image</shortdescription>
   
<description>
Experimental: Supply an image of the E Jones elements. The format of the 
image is:
\begin{description}
\item[Shape] nx by ny by 4 complex polarizations (RR, RL, LR, LL or
XX, XY, YX, YY) by 1 channel.
\item[Direction coordinate] Az, El
\item[Stokes coordinate] All four ``stokes'' parameters must be present
in the sequence RR, RL, LR, LL or XX, XY, YX, YY.
\item[Frequency] Only one channel is currently needed - frequency 
dependence beyond that is ignored. 
\end{description}

If a compleximage is specified the real and imaginary images is to be left empty.

The other option is to provide the real and imaginary part of the E-Jones as seperale {\tt float} images
On that case
one or two images may be specified - the real (must be present) and
imaginary parts (optional). 

Note that beamsquint must be intrinsic to the images themselves.
This will be accounted for correctly by regridding of the images
from Az-El to Ra-Dec according to the parallactic angle.

antnames is the Vector of names  for which this response pattern apply '*' is for all 
The name has to match exactly the name of the Antennas in the ANTENNA table of the MS with which
you want to use this VPManager table or object.

</description>
<input>

     <param type="string" name="telescope">
     <description>Which telescope in the MS will use this vp/pb?</description>
     <value>VLA</value>
     </param>

     <param type="string" name="othertelescope">
     <description>If telescope=="OTHER", specify name here</description>
     <value></value>
     </param>

     <param type="bool" name="dopb">
     <description>Should we apply the vp/pb to this telescope's data?</description>
     <value>true</value>
     </param>

     <param type="string" name="realimage">
     <description>Real part of vp as an image</description>
     <value></value>
     </param>

     <param type="string" name="imagimage">
     <description>Imaginary part of vp as an image</description>
     <value></value>
     </param>
     
     <param type="string" name="compleximage">
     <description>complex vp as an image of complex numbers; if specified realimage and imagimage are ignored </description>
     <value></value>
     </param>
     
     <param type="stringArray" name="antnames">
     <description>antenna names for which this pattern is valid; default is all antennas</description>
     <value type="vector">
       <value type="string">*</value>
     </value>
     </param>

</input>
<returns type="record">itemcontainer</returns>
</method>

 
   <method type="function" name="setpbpoly">
   <shortdescription>Make a vp/pb from a polynomial</shortdescription>
   
<description>
The VP or PB is described as a polynomial of even powers:
\begin{equation}
VP(x) = \sum_{i} coeff_{i} * x^{2i}.
\end{equation}
</description>
<input>

     <param type="string" name="telescope">
     <description>Which telescope in the MS will use this vp/pb?</description>
     <value>VLA</value>
     </param>

     <param type="string" name="othertelescope">
     <description>If telescope=="OTHER", specify name here</description>
     <value></value>
     </param>

     <param type="bool" name="dopb">
     <description>Should we apply the vp/pb to this telescope's data?</description>
     <value>true</value>
     </param>

     <param type="doubleArray" name="coeff">
     <description>Coefficients of even powered terms</description>
     <value>-1</value>
     </param>

     <param type="any" name="maxrad">
     <description>Maximum radial extent of the vp/pb (scales with 1/freq)</description>
     <any type="variant"/>
     <value>0.8deg</value>
     </param>

     <param type="any" name="reffreq">
     <description>Frequency at which maxrad is specified</description>
     <any type="variant"/>
     <value>1.0GHz</value>
     </param>

     <param type="string" name="isthispb">
     <description>Do these parameters describe a PB or a VP?</description>
     <value>PB</value>
     </param>

     <param type="any" name="squintdir">
     <any type="variant"/>
     <description>Offset (Measure) of RR beam from pointing center, azel frame (scales with 1/freq)</description>
     <value></value>
     </param>

     <param type="any" name="squintreffreq">
     <description>Frequency at which the squint is specified</description>
     <any type="variant"/>
     <value>1.0GHz</value>
     </param>

     <param type="bool" name="dosquint">
     <description>Enable the natural beam squint found in the common vp model</description>
     <value>false</value>
     </param>

     <param type="any" name="paincrement">
     <description>Increment in Parallactic Angle for asymmetric (ie, squinted) vp application</description>
     <any type="variant"/>
     <value>720</value>
     </param>

     <param type="bool" name="usesymmetricbeam">
     <description>Not currently used</description>
     <value>false</value>
     </param>
</input>
<returns type="record">itemcontainer</returns>
</method>

   <method type="function" name="setpbantresptable">
   <shortdescription>Declare a reference to an antenna responses table</shortdescription>
   
<description>
Declare a reference to an antenna responses table containing a set of VP/PB definitions.
</description>
<input>

     <param type="string" name="telescope">
     <description>Which telescope in the MS will use this vp/pb?</description>
     <value></value>
     </param>

     <param type="string" name="othertelescope">
     <description>If telescope=="OTHER", specify name here</description>
     <value></value>
     </param>

     <param type="bool" name="dopb">
     <description>Should we apply the vp/pb to this telescope's data?</description>
     <value>true</value>
     </param>

     <param type="string" name="antresppath">
     <description>The path to the antenna responses table (absolute or relative to CASA data dir.)</description>
     <value></value>
     <type mustexist="true">path</type>
     </param>

</input>
<returns type="bool"></returns>
</method>

   <method type="function" name="reset">
   <shortdescription>Reinitialize the VPManager (will erase all VPs and defaults defined on the command line)</shortdescription>
   
<description>
Reinitialize the VPManager database.
Erase all VPs and defaults defined on the command line.
</description>
<input>
</input>
<returns type="bool"></returns>
</method>


   <method type="function" name="setuserdefault">
   <shortdescription>Select the VP which is to be used by the imager for the given telescope and antenna type</shortdescription>
   
<description>
Selects the VP which is to be used by the imager for the given telescope and antenna type.
Overwrites a previous default. Returns True if successful.
</description>  
<input>

     <param type="int" name="vplistnum">
     <description>The number of the vp as displayed by summarizevps(), or -1 for internal default, or -2 for unset</description>
     <value>-1</value>
     </param>

     <param type="string" name="telescope">
     <description>Which telescope in the MS will use this vp/pb?</description>
     <value></value>
     </param>

     <param type="string" name="anttype">
     <description>Which antennatype will use this vp/pb? Default: "" = all</description>
     <value></value>
     </param>

</input>
<returns type="bool"></returns>
</method>

   <method type="function" name="getuserdefault">
   <shortdescription>Get the vp list number of the present default VP/PB for the given parameters (-1 = internal PB, -2 = none)</shortdescription>
   
<description>
Get the vp list number of the present default VP/PB for the given parameters.
</description>  
<input>

     <param type="string" name="telescope">
     <description>Which telescope in the MS will use this vp/pb?</description>
     <value></value>
     </param>

     <param type="string" name="anttype">
     <description>Which antennatype will use this vp/pb? Default: "" = all</description>
     <value></value>
     </param>

</input>
<returns type="int"></returns>
</method>

   <method type="function" name="getanttypes">
   <shortdescription>Return the list of available antenna types for the given parameters</shortdescription>
   
<description>
Get a list of the available antenna types.
</description>  
<input>

     <param type="string" name="telescope">
     <description>Telescope name</description>
     <value></value>
     </param>
 
     <param type="any" direction="in" name="obstime">
     <description> Time of the observation (for versioning and reference frame calculations) 
     </description>
     <any type="variant"/>
     <value></value>
     </param>

     <param type="any" direction="in" name="freq">
     <description> Frequency of the observation (may include reference frame, default: LSRK)
     </description>
     <any type="variant"/>
     <value></value>
     </param>

     <param type="any" direction="in" name="obsdirection">
     <description> Direction of the observation (may include reference frame, default: J2000). default: Zenith 
     </description>
     <any type="variant"/>
     <value>AZEL 0deg 90deg</value>
     </param>

</input>
<returns type="stringArray"></returns>
</method>


   <method type="function" name="numvps">
   <shortdescription>Return the number of vps/pbs available for the given parameters</shortdescription>
   
<description>
Can be used to, e.g., determine the number of antenna types.
Note: if a global response is defined for the telescope, this will increase the count of
available vps/pbs by 1.
</description>  
<input>

     <param type="string" name="telescope">
     <description>Telescope name</description>
     <value></value>
     </param>
 
     <param type="any" direction="in" name="obstime">
     <description> Time of the observation (for versioning and reference frame calculations) 
     </description>
     <any type="variant"/>
     <value></value>
     </param>
     <param type="any" direction="in" name="freq">
     <description> Frequency of the observation (may include reference frame, default: LSRK)
     </description>
     <any type="variant"/>
     <value></value>
     </param>

     <param type="any" direction="in" name="obsdirection">
     <description> Direction of the observation (may include reference frame, default: J2000). default: Zenith 
     </description>
     <any type="variant"/>
     <value>AZEL 0deg 90deg</value>
     </param>

</input>
<returns type="int"></returns>
</method>

   <method type="function" name="getvp">
   <shortdescription>Return the default vps/pbs record for the given parameters</shortdescription>
   
<description>
Record is empty if no matching vp/pb could be found.
</description>  
<input>

     <param type="string" name="telescope">
     <description>Telescope name</description>
     <value></value>
     </param>
 
     <param type="string" name="antennatype">
     <description>The antenna type as a string, e.g. "DV"</description>
     <value></value>
     </param>

     <param type="any" direction="in" name="obstime">
     <description> Time of the observation (for versioning and reference frame calculations), e.g. 2011/12/12T00:00:00 
     </description>
     <any type="variant"/>
     <value></value>
     </param>

     <param type="any" direction="in" name="freq">
     <description> Frequency of the observation (may include reference frame, default: LSRK)
     </description>
     <any type="variant"/>
     <value></value>
     </param>

     <param type="any" direction="in" name="obsdirection">
     <description> Direction of the observation (may include reference frame, default: J2000), default:
     </description>
     <any type="variant"/>
     <value type="string">AZEL 0deg 90deg</value>
     </param>

</input>
<returns type="record">itemcontainer</returns>
</method>


   <method type="function" name="getvps">
   <shortdescription>Return the default vps/pbs records for the given antenna list as subrecords in one record</shortdescription>
   
<description>
Record is empty if no matching vp/pb could be found.
</description>  
<input>

     <param type="string" name="telescope">
     <description>Telescope name</description>
     <value></value>
     </param>
 
     <param type="stringArray" name="antennas">
     <description>The antenna names, e.g., as taken from the MS ANTENNA table</description>
     <value></value>
     </param>

     <param type="any" direction="in" name="obstimestart">
     <description> Time of the start of the observation (for versioning and reference frame calculations), e.g. 2011/12/12T00:00:00 
     </description>
     <any type="variant"/>
     <value type="string">1970/01/01T00:00:00</value>
     </param>

     <param type="any" direction="in" name="obstimeend">
     <description> Time of the end of the observation (for versioning and reference frame calculations), e.g. 2011/12/12T00:00:00 
     </description>
     <any type="variant"/>
     <value type="string">1970/01/01T00:00:00</value>
     </param>

     <param type="any" direction="in" name="minfreq">
     <description> Minimum frequency of the observation (may include reference frame, default: LSRK)
     </description>
     <any type="variant"/>
     <value type="string">1GHz</value>
     </param>

     <param type="any" direction="in" name="maxfreq">
     <description> Maximum frequency of the observation (may include reference frame, default: LSRK)
     </description>
     <any type="variant"/>
     <value type="string">1GHz</value>
     </param>

     <param type="any" direction="in" name="obsdirection">
     <description> Direction of the observation (may include reference frame, default: J2000), default:
     </description>
     <any type="variant"/>
     <value type="string">AZEL 0deg 90deg</value>
     </param>

</input>
<returns type="record">itemcontainer</returns>
</method>


   <method type="function" name="createantresp">
   <shortdescription>Create a standard-format AntennaResponses table</shortdescription>
   
<description>
The AntennaResponses table serves CASA to look up the location of images describing the
response of observatory antennas. Three types of images are supported: "VP" - real voltage patterns,
"AIF" - complex aperture illumination patterns, "EFP" - complex electric field patterns.
For each image, a validity range can be defined in Azimuth, Elevation, and Frequency.
Furthermore, an antenna type (for heterogeneous arrays), a receiver type (for the case of
several receivers on the same antenna having overlapping frequency bands), and a beam number
(for the case of multiple beams per antenna) are associated with each response image.

The images need to be stored in a single directory DIR of arbitrary name and need to
have file names following the pattern
\begin{verbatim}
obsname_beamnum_anttype_rectype_azmin_aznom_azmax_elmin_elnom_elmax_freqmin_freqnom_freqmax_frequnit_comment_functype.im
\end{verbatim}
where the individual name elements mean the following (none of the elements may contain 
the space character, but they may be empty strings if they are not numerical values):
\begin{description}
\item[obsname] - name of the observatory as in the Observatories table, e.g. "ALMA"
\item[beamnum] - the numerical beam number (integer) for the case of multiple beams, e.g. 0
\item[anttype] - name of the antenna type, e.g. "DV"
\item[rectype] - name of the receiver type, e.g. ""
\item[azmin, aznom, azmax] - numerical value (degrees) of the minimal, the nominal, and 
  the maximal Azimuth where this response is valid, e.g. "-10.5\_0.\_10.5"
\item[elmin, elnom, elmax] - numerical value (degrees) of the minimal, the nominal, and 
  the maximal Elevation where this response is valid, e.g. "10.\_45.\_80."
\item[freqmin, freqnom, freqmax] - numerical value (degrees) of the minimal, the nominal, and 
  the maximal Frequency (in units of frequnit) where this response is valid, e.g. "84.\_100.\_116."
\item[frequnit] - the unit of the previous three frequencies, e.g. "GHz"
\item[comment] - any string containing only characters permitted in file names and not empty space
\item[functype] - the type of the image as defined above ("VP", "AIF", or "EFP")
 \end{description}

The createantresp method will then extract the parameters from all the images in DIR
and create the lookup table in the same directory.
</description>
<input>

     <param type="string" direction="in" name="imdir">
     <description>Path to the directory containing the response images</description>
     <value></value>
     </param>

     <param type="string" direction="in" name="starttime">
     <description>Time from which onwards the response is valid, format YYYY/MM/DD/hh:mm:ss</description>
     <value></value>
     </param>

     <param type="stringArray" name="bandnames">
     <description>List containing the names of the observatory's frequency bands</description>
     <value></value>
     </param>

     <param type="stringArray" name="bandminfreq">
     <description>List containing the lower edges of the observatory's frequency bands, e.g. ["80GHz","120GHz"]</description>
     <value></value>
     </param>

     <param type="stringArray" name="bandmaxfreq">
     <description>List containing the upper edges of the observatory's frequency bands, e.g. ["120GHz","180GHz"]</description>
     <value></value>
     </param>


</input>
<returns type="bool"></returns>
</method>

   <method type="function" name="getrespimagename">
   <shortdescription>Get the image name for the given parameters from the given responses table</shortdescription>
   
<description>
Given the observatory name, the antenna type, the receiver type, the observing frequency, the
observing direction, and the beam number, find the applicable response image and return its name.
</description>
<input>

     <param type="string" direction="in" name="telescope">
     <description>Which telescope is described by this response?</description>
     <value></value>
     </param>

     <param type="string" direction="in" name="starttime">
     <description>Time at which the response has to be valid, format YYYY/MM/DD/hh:mm:ss</description>
     <value></value>
     </param>

     <param type="string" name="frequency">
     <description>The frequency at which the response has to be valid, e.g. "100GHz"</description>
     <value></value>
     </param>

     <param type="string" name="functype">
     <description>Type of the responsefunction requested, e.g. "EFP"</description>
     <value>ANY</value>
     </param>

     <param type="string" name="anttype">
     <description>Antenna type (observatory-dependent)</description>
     <value></value>
     </param>

     <param type="string" name="azimuth">
     <description>Azimuth of the observation (at the location of the observatory, 0 is North), e.g. "5deg"</description>
     <value>0deg</value>
     </param>

     <param type="string" name="elevation">
     <description>Elevation of the observation (at the location of the observatory, 0 is North), e.g. "60deg" </description>
     <value>45deg</value>
     </param>

     <param type="string" name="rectype">
     <description>Receiver type (observatory-dependent)</description>
     <value></value>
     </param>

     <param type="int" name="beamnumber">
     <description>Beam number (for the case of multiple beams per receiver)</description>
     <value>0</value>
     </param>


</input>
<returns type="string"></returns>
</method>




</tool>

</casaxml>
